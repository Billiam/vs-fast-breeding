{
  "formatting": [
    {
      "type": "separator",
      "weight": 1
    },
    {
      "title": "fotsa",
      "type": "separator",
      "weight": 7
    }
  ],
  "patches": {
    "integer": {
      "fastbreeding:patches/compatibility/fotsa/bovinae.json": {
        "0/value": "round(BOVINAE_CYCLE * 34)",
        "1/value": "round(BOVINAE_CYCLE * 3)",
        "2/value": "round(BOVINAE_CYCLE * 22)",
        "3/value": "round(BOVINAE_CYCLE * 2)",
        "4/value": "round(BOVINAE_CYCLE * 54)",
        "5/value": "round(BOVINAE_CYCLE * 6)",
        "6/value": "round(BOVINAE_CYCLE * 34)",
        "7/value": "round(BOVINAE_CYCLE * 3)",
        "8/value": "round(BOVINAE_CYCLE * 7)",
        "9/value": "round(BOVINAE_CYCLE * 1)",
        "10/value": "round(BOVINAE_CYCLE * 2.5)",
        "11/value": "round(BOVINAE_CYCLE * 0.5)",
        "12/value": "round(BOVINAE_CYCLE * 10)",
        "13/value": "round(BOVINAE_CYCLE * 1)",
        "14/value": "round(BOVINAE_CYCLE * 4.5)",
        "15/value": "round(BOVINAE_CYCLE * 0.5)",
        "16/value": "round(BOVINAE_CYCLE * 1)",
        "17/value": "round(BOVINAE_CYCLE * 22)",
        "18/value": "round(BOVINAE_CYCLE * 8)",
        "19/value": "round(BOVINAE_CYCLE * 57)",
        "20/value": "round(BOVINAE_CYCLE * 5)",
        "21/value": "round(BOVINAE_CYCLE * 1)",
        "22/value": "round(BOVINAE_CYCLE * 4)",
        "23/value": "round(BOVINAE_CYCLE * 1)",
        "24/value": "round(BOVINAE_CYCLE * 2)",
        "25/value": "round(BOVINAE_CYCLE * 1)",
        "26/value": "round(BOVINAE_CYCLE * 1)",
        "27/value": "round(BOVINAE_CYCLE * 0.2)",
        "28/value": "round(BOVINAE_CYCLE * 1)",
        "29/value": "max(1, round(BOVINAE_CYCLE * 350))",
        "30/value": "round(BOVINAE_CYCLE * 4)",
        "31/value": "round(BOVINAE_CYCLE * 2)"
      },
      "fastbreeding:patches/compatibility/fotsa/caninae.json": {
        "0/value": "round(CANINAE_CYCLE * 1)",
        "1/value": "max(1, round(CANINAE_CYCLE * 525))",
        "2/value": "max(1, round(CANINAE_CYCLE * 160))",
        "3/value": "max(1, round(CANINAE_CYCLE * 345))",
        "4/value": "max(1, round(CANINAE_CYCLE * 116))",
        "5/value": "max(1, round(CANINAE_CYCLE * 160))",
        "6/value": "max(1, round(CANINAE_CYCLE * 525))",
        "7/value": "max(1, round(CANINAE_CYCLE * 525))",
        "8/value": "max(1, round(CANINAE_CYCLE * 345))",
        "9/value": "max(1, round(CANINAE_CYCLE * 345))",
        "10/value": "max(1, round(CANINAE_CYCLE * 345))",
        "11/value": "max(1, round(CANINAE_CYCLE * 345))",
        "12/value": "max(1, round(CANINAE_CYCLE * 116))",
        "13/value": "max(1, round(CANINAE_CYCLE * 116))",
        "14/value": "max(1, round(CANINAE_CYCLE * 160))",
        "15/value": "max(1, round(CANINAE_CYCLE * 160))",
        "16/value": "max(1, round(CANINAE_CYCLE * 345))",
        "17/value": "round(CANINAE_CYCLE * 3)",
        "18/value": "round(CANINAE_CYCLE * 1)",
        "19/value": "round(CANINAE_CYCLE * 6)",
        "20/value": "round(CANINAE_CYCLE * 2)",
        "21/value": "round(CANINAE_CYCLE * 1)",
        "22/value": "round(CANINAE_CYCLE * 0.5)",
        "23/value": "round(CANINAE_CYCLE * 3)",
        "24/value": "round(CANINAE_CYCLE * 0.5)",
        "25/value": "round(CANINAE_CYCLE * 2)",
        "26/value": "round(CANINAE_CYCLE * 1)",
        "27/value": "round(CANINAE_CYCLE * 1)",
        "28/value": "round(CANINAE_CYCLE * 0.5)",
        "29/value": "round(CANINAE_CYCLE * 3)",
        "30/value": "round(CANINAE_CYCLE * 0.5)",
        "31/value": "round(CANINAE_CYCLE * 4)",
        "32/value": "round(CANINAE_CYCLE * 0.5)",
        "33/value": "round(CANINAE_CYCLE * 1)",
        "34/value": "round(CANINAE_CYCLE * 0.3)",
        "35/value": "round(CANINAE_CYCLE * 2)",
        "36/value": "round(CANINAE_CYCLE * 1)",
        "37/value": "round(CANINAE_CYCLE * 2)",
        "38/value": "round(CANINAE_CYCLE * 1)",
        "39/value": "round(CANINAE_CYCLE * 1)",
        "40/value": "round(CANINAE_CYCLE * 0.5)",
        "41/value": "round(CANINAE_CYCLE * 1)",
        "42/value": "round(CANINAE_CYCLE * 0.3)",
        "43/value": "round(CANINAE_CYCLE * 1)",
        "44/value": "round(CANINAE_CYCLE * 0.3)",
        "45/value": "round(CANINAE_CYCLE * 1)",
        "46/value": "round(CANINAE_CYCLE * 0.3)",
        "47/value": "round(CANINAE_CYCLE * 1)",
        "48/value": "round(CANINAE_CYCLE * 0.3)",
        "49/value": "round(CANINAE_CYCLE * 3)",
        "50/value": "round(CANINAE_CYCLE * 1)",
        "51/value": "round(CANINAE_CYCLE * 1)",
        "52/value": "round(CANINAE_CYCLE * 0.6)",
        "53/value": "round(CANINAE_CYCLE * 1)",
        "54/value": "round(CANINAE_CYCLE * 0.6)",
        "55/value": "round(CANINAE_CYCLE * 1)",
        "56/value": "round(CANINAE_CYCLE * 0.3)",
        "57/value": "round(CANINAE_CYCLE * 1)",
        "58/value": "round(CANINAE_CYCLE * 0.6)",
        "59/value": "round(CANINAE_CYCLE * 2)",
        "60/value": "round(CANINAE_CYCLE * 0.6)",
        "61/value": "round(CANINAE_CYCLE * 1)",
        "62/value": "round(CANINAE_CYCLE * 0.3)",
        "63/value": "round(CANINAE_CYCLE * 1)",
        "64/value": "round(CANINAE_CYCLE * 0.3)",
        "65/value": "round(CANINAE_CYCLE * 1)",
        "66/value": "round(CANINAE_CYCLE * 0.3)",
        "67/value": "round(CANINAE_CYCLE * 1)",
        "68/value": "round(CANINAE_CYCLE * 0.3)",
        "69/value": "round(CANINAE_CYCLE * 1)",
        "70/value": "round(CANINAE_CYCLE * 0.3)",
        "71/value": "round(CANINAE_CYCLE * 1)",
        "72/value": "round(CANINAE_CYCLE * 0.3)",
        "73/value": "round(CANINAE_CYCLE * 1)",
        "74/value": "round(CANINAE_CYCLE * 18)",
        "75/value": "round(CANINAE_CYCLE * 18)",
        "76/value": "round(CANINAE_CYCLE * 18)",
        "77/value": "round(CANINAE_CYCLE * 18)",
        "78/value": "round(CANINAE_CYCLE * 18)",
        "79/value": "round(CANINAE_CYCLE * 18)",
        "80/value": "round(CANINAE_CYCLE * 18)",
        "81/value": "round(CANINAE_CYCLE * 18)",
        "82/value": "round(CANINAE_CYCLE * 18)",
        "83/value": "round(CANINAE_CYCLE * 18)",
        "84/value": "round(CANINAE_CYCLE * 18)",
        "85/value": "round(CANINAE_CYCLE * 18)",
        "86/value": "round(CANINAE_CYCLE * 18)",
        "87/value": "round(CANINAE_CYCLE * 18)",
        "88/value": "round(CANINAE_CYCLE * 18)",
        "89/value": "round(CANINAE_CYCLE * 18)",
        "90/value": "round(CANINAE_CYCLE * 9)",
        "91/value": "round(CANINAE_CYCLE * 9)",
        "92/value": "round(CANINAE_CYCLE * 9)",
        "93/value": "round(CANINAE_CYCLE * 9)",
        "94/value": "round(CANINAE_CYCLE * 9)",
        "95/value": "round(CANINAE_CYCLE * 9)",
        "96/value": "round(CANINAE_CYCLE * 9)",
        "97/value": "round(CANINAE_CYCLE * 9)",
        "98/value": "round(CANINAE_CYCLE * 9)",
        "99/value": "round(CANINAE_CYCLE * 9)",
        "100/value": "round(CANINAE_CYCLE * 9)",
        "101/value": "round(CANINAE_CYCLE * 9)",
        "102/value": "round(CANINAE_CYCLE * 9)",
        "103/value": "round(CANINAE_CYCLE * 9)",
        "104/value": "round(CANINAE_CYCLE * 9)",
        "105/value": "round(CANINAE_CYCLE * 9)",
        "106/value": "round(CANINAE_CYCLE * 12)",
        "107/value": "round(CANINAE_CYCLE * 12)",
        "108/value": "round(CANINAE_CYCLE * 12)",
        "109/value": "round(CANINAE_CYCLE * 13)",
        "110/value": "round(CANINAE_CYCLE * 13)",
        "111/value": "round(CANINAE_CYCLE * 12)",
        "112/value": "round(CANINAE_CYCLE * 12)",
        "113/value": "round(CANINAE_CYCLE * 13)",
        "114/value": "round(CANINAE_CYCLE * 13)",
        "115/value": "round(CANINAE_CYCLE * 13)",
        "116/value": "round(CANINAE_CYCLE * 12)",
        "117/value": "round(CANINAE_CYCLE * 12)",
        "118/value": "round(CANINAE_CYCLE * 14)",
        "119/value": "round(CANINAE_CYCLE * 12)",
        "120/value": "round(CANINAE_CYCLE * 12)",
        "121/value": "round(CANINAE_CYCLE * 12)",
        "122/value": "round(CANINAE_CYCLE * 6)",
        "123/value": "round(CANINAE_CYCLE * 2)",
        "124/value": "round(CANINAE_CYCLE * 1)",
        "125/value": "round(CANINAE_CYCLE * 0.5)",
        "126/value": "round(CANINAE_CYCLE * 3)",
        "127/value": "round(CANINAE_CYCLE * 0.5)",
        "128/value": "round(CANINAE_CYCLE * 2)",
        "129/value": "round(CANINAE_CYCLE * 1)",
        "130/value": "round(CANINAE_CYCLE * 1)",
        "131/value": "round(CANINAE_CYCLE * 0.5)",
        "132/value": "round(CANINAE_CYCLE * 3)",
        "133/value": "round(CANINAE_CYCLE * 0.5)",
        "134/value": "round(CANINAE_CYCLE * 4)",
        "135/value": "round(CANINAE_CYCLE * 0.5)",
        "136/value": "round(CANINAE_CYCLE * 1)",
        "137/value": "round(CANINAE_CYCLE * 0.3)",
        "138/value": "round(CANINAE_CYCLE * 2)",
        "139/value": "round(CANINAE_CYCLE * 1)",
        "140/value": "round(CANINAE_CYCLE * 2)",
        "141/value": "round(CANINAE_CYCLE * 1)",
        "142/value": "round(CANINAE_CYCLE * 1)",
        "143/value": "round(CANINAE_CYCLE * 0.5)",
        "144/value": "round(CANINAE_CYCLE * 1)",
        "145/value": "round(CANINAE_CYCLE * 0.3)",
        "146/value": "round(CANINAE_CYCLE * 1)",
        "147/value": "round(CANINAE_CYCLE * 0.3)",
        "148/value": "round(CANINAE_CYCLE * 1)",
        "149/value": "round(CANINAE_CYCLE * 0.3)",
        "150/value": "round(CANINAE_CYCLE * 1)",
        "151/value": "round(CANINAE_CYCLE * 0.3)",
        "152/value": "round(CANINAE_CYCLE * 3)",
        "153/value": "round(CANINAE_CYCLE * 1)",
        "154/value": "round(CANINAE_CYCLE * 1)",
        "155/value": "round(CANINAE_CYCLE * 0.6)",
        "156/value": "round(CANINAE_CYCLE * 1)",
        "157/value": "round(CANINAE_CYCLE * 0.6)",
        "158/value": "round(CANINAE_CYCLE * 1)",
        "159/value": "round(CANINAE_CYCLE * 0.3)",
        "160/value": "round(CANINAE_CYCLE * 1)",
        "161/value": "round(CANINAE_CYCLE * 0.6)",
        "162/value": "round(CANINAE_CYCLE * 2)",
        "163/value": "round(CANINAE_CYCLE * 0.6)",
        "164/value": "round(CANINAE_CYCLE * 1)",
        "165/value": "round(CANINAE_CYCLE * 0.3)",
        "166/value": "round(CANINAE_CYCLE * 1)",
        "167/value": "round(CANINAE_CYCLE * 0.3)",
        "168/value": "round(CANINAE_CYCLE * 1)",
        "169/value": "round(CANINAE_CYCLE * 0.3)",
        "170/value": "round(CANINAE_CYCLE * 1)",
        "171/value": "round(CANINAE_CYCLE * 0.3)",
        "172/value": "round(CANINAE_CYCLE * 1)",
        "173/value": "round(CANINAE_CYCLE * 0.3)",
        "174/value": "round(CANINAE_CYCLE * 1)",
        "175/value": "round(CANINAE_CYCLE * 0.3)",
        "176/value": "round(CANINAE_CYCLE * 1)",
        "177/value": "round(CANINAE_CYCLE * 1)",
        "178/value": "round(CANINAE_CYCLE * 0.3)",
        "179/value": "round(CANINAE_CYCLE * 1)",
        "180/value": "round(CANINAE_CYCLE * 0.3)",
        "181/value": "round(CANINAE_CYCLE * 1)",
        "182/value": "round(CANINAE_CYCLE * 0.3)",
        "183/value": "round(CANINAE_CYCLE * 1)",
        "184/value": "round(CANINAE_CYCLE * 0.3)",
        "185/value": "round(CANINAE_CYCLE * 1)",
        "186/value": "max(1, round(CANINAE_CYCLE * 525))",
        "187/value": "max(1, round(CANINAE_CYCLE * 131))",
        "188/value": "max(1, round(CANINAE_CYCLE * 175))",
        "189/value": "max(1, round(CANINAE_CYCLE * 175))",
        "190/value": "max(1, round(CANINAE_CYCLE * 175))",
        "191/value": "max(1, round(CANINAE_CYCLE * 175))",
        "192/value": "max(1, round(CANINAE_CYCLE * 175))",
        "193/value": "max(1, round(CANINAE_CYCLE * 175))",
        "194/value": "max(1, round(CANINAE_CYCLE * 175))",
        "195/value": "max(1, round(CANINAE_CYCLE * 175))",
        "196/value": "max(1, round(CANINAE_CYCLE * 175))",
        "197/value": "max(1, round(CANINAE_CYCLE * 175))",
        "198/value": "max(1, round(CANINAE_CYCLE * 175))",
        "199/value": "round(CANINAE_CYCLE * 2)",
        "200/value": "round(CANINAE_CYCLE * 1)",
        "201/value": "round(CANINAE_CYCLE * 2)",
        "202/value": "round(CANINAE_CYCLE * 0.6)",
        "203/value": "round(CANINAE_CYCLE * 1)",
        "204/value": "round(CANINAE_CYCLE * 0.3)",
        "205/value": "round(CANINAE_CYCLE * 2)",
        "206/value": "round(CANINAE_CYCLE * 1)",
        "207/value": "round(CANINAE_CYCLE * 2)",
        "208/value": "round(CANINAE_CYCLE * 1)",
        "209/value": "round(CANINAE_CYCLE * 2)",
        "210/value": "round(CANINAE_CYCLE * 1)",
        "211/value": "round(CANINAE_CYCLE * 2)",
        "212/value": "round(CANINAE_CYCLE * 0.6)",
        "213/value": "round(CANINAE_CYCLE * 1)",
        "214/value": "round(CANINAE_CYCLE * 0.3)",
        "215/value": "round(CANINAE_CYCLE * 1)",
        "216/value": "round(CANINAE_CYCLE * 0.3)",
        "217/value": "round(CANINAE_CYCLE * 1)",
        "218/value": "round(CANINAE_CYCLE * 0.3)",
        "219/value": "round(CANINAE_CYCLE * 1)",
        "220/value": "round(CANINAE_CYCLE * 0.3)",
        "221/value": "round(CANINAE_CYCLE * 3)",
        "222/value": "round(CANINAE_CYCLE * 1)",
        "223/value": "round(CANINAE_CYCLE * 1)",
        "224/value": "round(CANINAE_CYCLE * 0.3)",
        "225/value": "round(CANINAE_CYCLE * 1)",
        "226/value": "round(CANINAE_CYCLE * 0.3)",
        "227/value": "round(CANINAE_CYCLE * 1)",
        "228/value": "round(CANINAE_CYCLE * 0.3)",
        "229/value": "round(CANINAE_CYCLE * 1)",
        "230/value": "round(CANINAE_CYCLE * 0.3)",
        "231/value": "round(CANINAE_CYCLE * 1)",
        "232/value": "round(CANINAE_CYCLE * 0.3)",
        "233/value": "round(CANINAE_CYCLE * 1)",
        "234/value": "round(CANINAE_CYCLE * 0.6)",
        "235/value": "round(CANINAE_CYCLE * 1)",
        "236/value": "round(CANINAE_CYCLE * 27)",
        "237/value": "round(CANINAE_CYCLE * 18)",
        "238/value": "round(CANINAE_CYCLE * 27)",
        "239/value": "round(CANINAE_CYCLE * 18)",
        "240/value": "round(CANINAE_CYCLE * 18)",
        "241/value": "round(CANINAE_CYCLE * 18)",
        "242/value": "round(CANINAE_CYCLE * 18)",
        "243/value": "round(CANINAE_CYCLE * 18)",
        "244/value": "round(CANINAE_CYCLE * 18)",
        "245/value": "round(CANINAE_CYCLE * 18)",
        "246/value": "round(CANINAE_CYCLE * 18)",
        "247/value": "round(CANINAE_CYCLE * 18)",
        "248/value": "round(CANINAE_CYCLE * 18)",
        "249/value": "round(CANINAE_CYCLE * 9)",
        "250/value": "round(CANINAE_CYCLE * 18)",
        "251/value": "round(CANINAE_CYCLE * 9)",
        "252/value": "round(CANINAE_CYCLE * 9)",
        "253/value": "round(CANINAE_CYCLE * 9)",
        "254/value": "round(CANINAE_CYCLE * 9)",
        "255/value": "round(CANINAE_CYCLE * 9)",
        "256/value": "round(CANINAE_CYCLE * 9)",
        "257/value": "round(CANINAE_CYCLE * 9)",
        "258/value": "round(CANINAE_CYCLE * 9)",
        "259/value": "round(CANINAE_CYCLE * 9)",
        "260/value": "round(CANINAE_CYCLE * 12)",
        "261/value": "round(CANINAE_CYCLE * 12)",
        "262/value": "round(CANINAE_CYCLE * 12)",
        "263/value": "round(CANINAE_CYCLE * 12)",
        "264/value": "round(CANINAE_CYCLE * 12)",
        "265/value": "round(CANINAE_CYCLE * 12)",
        "266/value": "round(CANINAE_CYCLE * 10)",
        "267/value": "round(CANINAE_CYCLE * 14)",
        "268/value": "round(CANINAE_CYCLE * 12)",
        "269/value": "round(CANINAE_CYCLE * 10)",
        "270/value": "round(CANINAE_CYCLE * 13)",
        "271/value": "round(CANINAE_CYCLE * 10)",
        "272/value": "round(CANINAE_CYCLE * 2)",
        "273/value": "round(CANINAE_CYCLE * 0.6)",
        "274/value": "round(CANINAE_CYCLE * 1)",
        "275/value": "round(CANINAE_CYCLE * 0.3)",
        "276/value": "round(CANINAE_CYCLE * 2)",
        "277/value": "round(CANINAE_CYCLE * 1)",
        "278/value": "round(CANINAE_CYCLE * 2)",
        "279/value": "round(CANINAE_CYCLE * 1)",
        "280/value": "round(CANINAE_CYCLE * 3)",
        "281/value": "round(CANINAE_CYCLE * 1)",
        "282/value": "round(CANINAE_CYCLE * 2)",
        "283/value": "round(CANINAE_CYCLE * 0.6)",
        "284/value": "round(CANINAE_CYCLE * 1)",
        "285/value": "round(CANINAE_CYCLE * 0.3)",
        "286/value": "round(CANINAE_CYCLE * 1)",
        "287/value": "round(CANINAE_CYCLE * 0.3)",
        "288/value": "round(CANINAE_CYCLE * 1)",
        "289/value": "round(CANINAE_CYCLE * 0.3)",
        "290/value": "round(CANINAE_CYCLE * 1)",
        "291/value": "round(CANINAE_CYCLE * 0.3)",
        "292/value": "round(CANINAE_CYCLE * 3)",
        "293/value": "round(CANINAE_CYCLE * 1)",
        "294/value": "round(CANINAE_CYCLE * 1)",
        "295/value": "round(CANINAE_CYCLE * 0.3)",
        "296/value": "round(CANINAE_CYCLE * 1)",
        "297/value": "round(CANINAE_CYCLE * 0.3)",
        "298/value": "round(CANINAE_CYCLE * 1)",
        "299/value": "round(CANINAE_CYCLE * 0.3)",
        "300/value": "round(CANINAE_CYCLE * 1)",
        "301/value": "round(CANINAE_CYCLE * 0.3)",
        "302/value": "round(CANINAE_CYCLE * 1)",
        "303/value": "round(CANINAE_CYCLE * 0.3)",
        "304/value": "round(CANINAE_CYCLE * 1)",
        "305/value": "round(CANINAE_CYCLE * 0.6)",
        "306/value": "round(CANINAE_CYCLE * 1)",
        "307/value": "round(CANINAE_CYCLE * 0.1)",
        "308/value": "round(CANINAE_CYCLE * 0.1)",
        "309/value": "round(CANINAE_CYCLE * 0.1)",
        "310/value": "round(CANINAE_CYCLE * 0.1)",
        "311/value": "round(CANINAE_CYCLE * 1)",
        "312/value": "max(1, round(CANINAE_CYCLE * 145))",
        "313/value": "max(1, round(CANINAE_CYCLE * 145))",
        "314/value": "round(CANINAE_CYCLE * 1)",
        "315/value": "round(CANINAE_CYCLE * 0.3)",
        "316/value": "round(CANINAE_CYCLE * 1)",
        "317/value": "round(CANINAE_CYCLE * 0.3)",
        "318/value": "round(CANINAE_CYCLE * 1)",
        "319/value": "round(CANINAE_CYCLE * 0.3)",
        "320/value": "round(CANINAE_CYCLE * 0.3)",
        "321/value": "round(CANINAE_CYCLE * 0.1)",
        "322/value": "round(CANINAE_CYCLE * 1)",
        "323/value": "round(CANINAE_CYCLE * 12)",
        "324/value": "round(CANINAE_CYCLE * 12)",
        "325/value": "round(CANINAE_CYCLE * 2)",
        "326/value": "round(CANINAE_CYCLE * 2)",
        "327/value": "round(CANINAE_CYCLE * 11)",
        "328/value": "round(CANINAE_CYCLE * 11)",
        "329/value": "round(CANINAE_CYCLE * 1)",
        "330/value": "round(CANINAE_CYCLE * 0.3)",
        "331/value": "round(CANINAE_CYCLE * 1)",
        "332/value": "round(CANINAE_CYCLE * 0.3)",
        "333/value": "round(CANINAE_CYCLE * 0.3)",
        "334/value": "round(CANINAE_CYCLE * 0.1)",
        "335/value": "round(CANINAE_CYCLE * 1)",
        "336/value": "round(CANINAE_CYCLE * 1)",
        "337/value": "max(1, round(CANINAE_CYCLE * 116))",
        "338/value": "max(1, round(CANINAE_CYCLE * 116))",
        "339/value": "max(1, round(CANINAE_CYCLE * 116))",
        "340/value": "max(1, round(CANINAE_CYCLE * 130))",
        "341/value": "max(1, round(CANINAE_CYCLE * 145))",
        "342/value": "max(1, round(CANINAE_CYCLE * 130))",
        "343/value": "max(1, round(CANINAE_CYCLE * 130))",
        "344/value": "max(1, round(CANINAE_CYCLE * 145))",
        "345/value": "max(1, round(CANINAE_CYCLE * 175))",
        "346/value": "max(1, round(CANINAE_CYCLE * 145))",
        "347/value": "max(1, round(CANINAE_CYCLE * 130))",
        "348/value": "max(1, round(CANINAE_CYCLE * 116))",
        "349/value": "max(1, round(CANINAE_CYCLE * 175))",
        "350/value": "max(1, round(CANINAE_CYCLE * 145))",
        "351/value": "max(1, round(CANINAE_CYCLE * 130))",
        "352/value": "round(CANINAE_CYCLE * 1)",
        "353/value": "round(CANINAE_CYCLE * 0.3)",
        "354/value": "round(CANINAE_CYCLE * 1)",
        "355/value": "round(CANINAE_CYCLE * 0.3)",
        "356/value": "round(CANINAE_CYCLE * 1)",
        "357/value": "round(CANINAE_CYCLE * 0.3)",
        "358/value": "round(CANINAE_CYCLE * 1)",
        "359/value": "round(CANINAE_CYCLE * 0.3)",
        "360/value": "round(CANINAE_CYCLE * 1)",
        "361/value": "round(CANINAE_CYCLE * 0.3)",
        "362/value": "round(CANINAE_CYCLE * 1)",
        "363/value": "round(CANINAE_CYCLE * 0.3)",
        "364/value": "round(CANINAE_CYCLE * 1)",
        "365/value": "round(CANINAE_CYCLE * 0.3)",
        "366/value": "round(CANINAE_CYCLE * 1)",
        "367/value": "round(CANINAE_CYCLE * 0.3)",
        "368/value": "round(CANINAE_CYCLE * 1)",
        "369/value": "round(CANINAE_CYCLE * 0.3)",
        "370/value": "round(CANINAE_CYCLE * 1)",
        "371/value": "round(CANINAE_CYCLE * 0.3)",
        "372/value": "round(CANINAE_CYCLE * 1)",
        "373/value": "round(CANINAE_CYCLE * 0.3)",
        "374/value": "round(CANINAE_CYCLE * 2)",
        "375/value": "round(CANINAE_CYCLE * 0.6)",
        "376/value": "round(CANINAE_CYCLE * 1)",
        "377/value": "round(CANINAE_CYCLE * 0.3)",
        "378/value": "round(CANINAE_CYCLE * 1)",
        "379/value": "round(CANINAE_CYCLE * 0.3)",
        "380/value": "round(CANINAE_CYCLE * 1)",
        "381/value": "round(CANINAE_CYCLE * 0.3)",
        "382/value": "round(CANINAE_CYCLE * 1)",
        "383/value": "round(CANINAE_CYCLE * 0.3)",
        "384/value": "round(CANINAE_CYCLE * 1)",
        "385/value": "round(CANINAE_CYCLE * 18)",
        "386/value": "round(CANINAE_CYCLE * 18)",
        "387/value": "round(CANINAE_CYCLE * 18)",
        "388/value": "round(CANINAE_CYCLE * 18)",
        "389/value": "round(CANINAE_CYCLE * 18)",
        "390/value": "round(CANINAE_CYCLE * 18)",
        "391/value": "round(CANINAE_CYCLE * 18)",
        "392/value": "round(CANINAE_CYCLE * 18)",
        "393/value": "round(CANINAE_CYCLE * 18)",
        "394/value": "round(CANINAE_CYCLE * 18)",
        "395/value": "round(CANINAE_CYCLE * 18)",
        "396/value": "round(CANINAE_CYCLE * 18)",
        "397/value": "round(CANINAE_CYCLE * 18)",
        "398/value": "round(CANINAE_CYCLE * 18)",
        "399/value": "round(CANINAE_CYCLE * 9)",
        "400/value": "round(CANINAE_CYCLE * 9)",
        "401/value": "round(CANINAE_CYCLE * 9)",
        "402/value": "round(CANINAE_CYCLE * 9)",
        "403/value": "round(CANINAE_CYCLE * 9)",
        "404/value": "round(CANINAE_CYCLE * 9)",
        "405/value": "round(CANINAE_CYCLE * 9)",
        "406/value": "round(CANINAE_CYCLE * 9)",
        "407/value": "round(CANINAE_CYCLE * 9)",
        "408/value": "round(CANINAE_CYCLE * 9)",
        "409/value": "round(CANINAE_CYCLE * 9)",
        "410/value": "round(CANINAE_CYCLE * 9)",
        "411/value": "round(CANINAE_CYCLE * 9)",
        "412/value": "round(CANINAE_CYCLE * 9)",
        "413/value": "round(CANINAE_CYCLE * 10)",
        "414/value": "round(CANINAE_CYCLE * 11)",
        "415/value": "round(CANINAE_CYCLE * 10)",
        "416/value": "round(CANINAE_CYCLE * 11)",
        "417/value": "round(CANINAE_CYCLE * 11)",
        "418/value": "round(CANINAE_CYCLE * 10)",
        "419/value": "round(CANINAE_CYCLE * 10)",
        "420/value": "round(CANINAE_CYCLE * 13)",
        "421/value": "round(CANINAE_CYCLE * 13)",
        "422/value": "round(CANINAE_CYCLE * 10)",
        "423/value": "round(CANINAE_CYCLE * 10)",
        "424/value": "round(CANINAE_CYCLE * 10)",
        "425/value": "round(CANINAE_CYCLE * 11)",
        "426/value": "round(CANINAE_CYCLE * 10)",
        "427/value": "round(CANINAE_CYCLE * 1)",
        "428/value": "round(CANINAE_CYCLE * 0.3)",
        "429/value": "round(CANINAE_CYCLE * 1)",
        "430/value": "round(CANINAE_CYCLE * 0.3)",
        "431/value": "round(CANINAE_CYCLE * 1)",
        "432/value": "round(CANINAE_CYCLE * 0.3)",
        "433/value": "round(CANINAE_CYCLE * 1)",
        "434/value": "round(CANINAE_CYCLE * 0.3)",
        "435/value": "round(CANINAE_CYCLE * 1)",
        "436/value": "round(CANINAE_CYCLE * 0.3)",
        "437/value": "round(CANINAE_CYCLE * 1)",
        "438/value": "round(CANINAE_CYCLE * 0.3)",
        "439/value": "round(CANINAE_CYCLE * 1)",
        "440/value": "round(CANINAE_CYCLE * 0.3)",
        "441/value": "round(CANINAE_CYCLE * 1)",
        "442/value": "round(CANINAE_CYCLE * 0.3)",
        "443/value": "round(CANINAE_CYCLE * 1)",
        "444/value": "round(CANINAE_CYCLE * 0.3)",
        "445/value": "round(CANINAE_CYCLE * 1)",
        "446/value": "round(CANINAE_CYCLE * 0.3)",
        "447/value": "round(CANINAE_CYCLE * 2)",
        "448/value": "round(CANINAE_CYCLE * 0.6)",
        "449/value": "round(CANINAE_CYCLE * 1)",
        "450/value": "round(CANINAE_CYCLE * 0.3)",
        "451/value": "round(CANINAE_CYCLE * 1)",
        "452/value": "round(CANINAE_CYCLE * 0.3)",
        "453/value": "round(CANINAE_CYCLE * 1)",
        "454/value": "round(CANINAE_CYCLE * 0.3)",
        "455/value": "round(CANINAE_CYCLE * 1)",
        "456/value": "round(CANINAE_CYCLE * 0.3)",
        "457/value": "round(CANINAE_CYCLE * 1)"
      },
      "fastbreeding:patches/compatibility/fotsa/capreolinae.json": {
        "0/value": "round(CAPREOLINAE_CYCLE * 30)",
        "1/value": "round(CAPREOLINAE_CYCLE * 3)",
        "2/value": "round(CAPREOLINAE_CYCLE * 32)",
        "3/value": "round(CAPREOLINAE_CYCLE * 5)",
        "4/value": "round(CAPREOLINAE_CYCLE * 9)",
        "5/value": "round(CAPREOLINAE_CYCLE * 3)",
        "6/value": "round(CAPREOLINAE_CYCLE * 7)",
        "7/value": "round(CAPREOLINAE_CYCLE * 2)",
        "8/value": "round(CAPREOLINAE_CYCLE * 7)",
        "9/value": "round(CAPREOLINAE_CYCLE * 2)",
        "10/value": "round(CAPREOLINAE_CYCLE * 0.2)",
        "11/value": "round(CAPREOLINAE_CYCLE * 1)",
        "12/value": "round(CAPREOLINAE_CYCLE * 1)",
        "13/value": "max(1, round(CAPREOLINAE_CYCLE * 336))",
        "14/value": "round(CAPREOLINAE_CYCLE * 22)",
        "15/value": "round(CAPREOLINAE_CYCLE * 8)",
        "16/value": "round(CAPREOLINAE_CYCLE * 48)",
        "17/value": "round(CAPREOLINAE_CYCLE * 6)",
        "18/value": "round(CAPREOLINAE_CYCLE * 2)",
        "19/value": "round(CAPREOLINAE_CYCLE * 10)",
        "20/value": "round(CAPREOLINAE_CYCLE * 3)",
        "21/value": "round(CAPREOLINAE_CYCLE * 3)",
        "22/value": "round(CAPREOLINAE_CYCLE * 1)",
        "23/value": "round(CAPREOLINAE_CYCLE * 1.5)",
        "24/value": "round(CAPREOLINAE_CYCLE * 1)",
        "25/value": "round(CAPREOLINAE_CYCLE * 1)",
        "26/value": "round(CAPREOLINAE_CYCLE * 0.3)",
        "27/value": "round(CAPREOLINAE_CYCLE * 1.3)",
        "28/value": "round(CAPREOLINAE_CYCLE * 0.3)",
        "29/value": "round(CAPREOLINAE_CYCLE * 1)",
        "30/value": "round(CAPREOLINAE_CYCLE * 0.3)",
        "31/value": "round(CAPREOLINAE_CYCLE * 0.2)",
        "32/value": "round(CAPREOLINAE_CYCLE * 1)",
        "33/value": "round(CAPREOLINAE_CYCLE * 1)",
        "34/value": "max(1, round(CAPREOLINAE_CYCLE * 94))",
        "35/value": "max(1, round(CAPREOLINAE_CYCLE * 100))",
        "36/value": "round(CAPREOLINAE_CYCLE * 11)",
        "37/value": "round(CAPREOLINAE_CYCLE * 4)",
        "38/value": "round(CAPREOLINAE_CYCLE * 60)",
        "39/value": "round(CAPREOLINAE_CYCLE * 58)",
        "40/value": "round(CAPREOLINAE_CYCLE * 38)",
        "41/value": "round(CAPREOLINAE_CYCLE * 4)",
        "42/value": "round(CAPREOLINAE_CYCLE * 2)",
        "43/value": "round(CAPREOLINAE_CYCLE * 1)",
        "44/value": "round(CAPREOLINAE_CYCLE * 1)",
        "45/value": "round(CAPREOLINAE_CYCLE * 2)",
        "46/value": "round(CAPREOLINAE_CYCLE * 1)",
        "47/value": "round(CAPREOLINAE_CYCLE * 2)",
        "48/value": "round(CAPREOLINAE_CYCLE * 1)",
        "49/value": "round(CAPREOLINAE_CYCLE * 2)",
        "50/value": "round(CAPREOLINAE_CYCLE * 1)",
        "51/value": "round(CAPREOLINAE_CYCLE * 2)",
        "52/value": "round(CAPREOLINAE_CYCLE * 1)",
        "53/value": "round(CAPREOLINAE_CYCLE * 2)",
        "54/value": "round(CAPREOLINAE_CYCLE * 1)",
        "55/value": "round(CAPREOLINAE_CYCLE * 2)",
        "56/value": "round(CAPREOLINAE_CYCLE * 1)",
        "57/value": "round(CAPREOLINAE_CYCLE * 10)",
        "58/value": "round(CAPREOLINAE_CYCLE * 3)",
        "59/value": "round(CAPREOLINAE_CYCLE * 5)",
        "60/value": "round(CAPREOLINAE_CYCLE * 2)",
        "61/value": "round(CAPREOLINAE_CYCLE * 8)",
        "62/value": "round(CAPREOLINAE_CYCLE * 2)",
        "63/value": "round(CAPREOLINAE_CYCLE * 4)",
        "64/value": "round(CAPREOLINAE_CYCLE * 1)",
        "65/value": "round(CAPREOLINAE_CYCLE * 8)",
        "66/value": "round(CAPREOLINAE_CYCLE * 2)",
        "67/value": "round(CAPREOLINAE_CYCLE * 2)",
        "68/value": "round(CAPREOLINAE_CYCLE * 1)",
        "69/value": "round(CAPREOLINAE_CYCLE * 8)",
        "70/value": "round(CAPREOLINAE_CYCLE * 2)",
        "71/value": "round(CAPREOLINAE_CYCLE * 3)",
        "72/value": "round(CAPREOLINAE_CYCLE * 1)",
        "73/value": "round(CAPREOLINAE_CYCLE * 1)",
        "74/value": "round(CAPREOLINAE_CYCLE * 0.2)",
        "75/value": "round(CAPREOLINAE_CYCLE * 2)",
        "76/value": "round(CAPREOLINAE_CYCLE * 1)",
        "77/value": "round(CAPREOLINAE_CYCLE * 14)",
        "78/value": "round(CAPREOLINAE_CYCLE * 2)",
        "79/value": "round(CAPREOLINAE_CYCLE * 12)",
        "80/value": "round(CAPREOLINAE_CYCLE * 3)",
        "81/value": "round(CAPREOLINAE_CYCLE * 8)",
        "82/value": "round(CAPREOLINAE_CYCLE * 2)",
        "83/value": "round(CAPREOLINAE_CYCLE * 13)",
        "84/value": "round(CAPREOLINAE_CYCLE * 3)",
        "85/value": "round(CAPREOLINAE_CYCLE * 5)",
        "86/value": "round(CAPREOLINAE_CYCLE * 2)",
        "87/value": "round(CAPREOLINAE_CYCLE * 13)",
        "88/value": "round(CAPREOLINAE_CYCLE * 3)",
        "89/value": "round(CAPREOLINAE_CYCLE * 2)",
        "90/value": "round(CAPREOLINAE_CYCLE * 1)",
        "91/value": "round(CAPREOLINAE_CYCLE * 13)",
        "92/value": "round(CAPREOLINAE_CYCLE * 3)",
        "93/value": "round(CAPREOLINAE_CYCLE * 4)",
        "94/value": "round(CAPREOLINAE_CYCLE * 1)",
        "95/value": "round(CAPREOLINAE_CYCLE * 1)",
        "96/value": "round(CAPREOLINAE_CYCLE * 0.2)",
        "97/value": "round(CAPREOLINAE_CYCLE * 2)",
        "98/value": "round(CAPREOLINAE_CYCLE * 1)",
        "99/value": "round(CAPREOLINAE_CYCLE * 22)",
        "100/value": "round(CAPREOLINAE_CYCLE * 2)",
        "101/value": "round(CAPREOLINAE_CYCLE * 2)",
        "102/value": "round(CAPREOLINAE_CYCLE * 1)",
        "103/value": "round(CAPREOLINAE_CYCLE * 1)",
        "104/value": "round(CAPREOLINAE_CYCLE * 0.5)",
        "105/value": "round(CAPREOLINAE_CYCLE * 2)",
        "106/value": "round(CAPREOLINAE_CYCLE * 1)",
        "107/value": "round(CAPREOLINAE_CYCLE * 1)",
        "108/value": "round(CAPREOLINAE_CYCLE * 0.3)",
        "109/value": "round(CAPREOLINAE_CYCLE * 2)",
        "110/value": "round(CAPREOLINAE_CYCLE * 1)",
        "111/value": "round(CAPREOLINAE_CYCLE * 2)",
        "112/value": "round(CAPREOLINAE_CYCLE * 1)",
        "113/value": "round(CAPREOLINAE_CYCLE * 1.2)",
        "114/value": "round(CAPREOLINAE_CYCLE * 0.3)",
        "115/value": "round(CAPREOLINAE_CYCLE * 4)",
        "116/value": "round(CAPREOLINAE_CYCLE * 2)",
        "117/value": "round(CAPREOLINAE_CYCLE * 6)",
        "118/value": "round(CAPREOLINAE_CYCLE * 2)",
        "119/value": "round(CAPREOLINAE_CYCLE * 2)",
        "120/value": "round(CAPREOLINAE_CYCLE * 0.3)",
        "121/value": "round(CAPREOLINAE_CYCLE * 2)",
        "122/value": "round(CAPREOLINAE_CYCLE * 0.3)",
        "123/value": "round(CAPREOLINAE_CYCLE * 2)",
        "124/value": "round(CAPREOLINAE_CYCLE * 0.3)",
        "125/value": "round(CAPREOLINAE_CYCLE * 1)",
        "126/value": "round(CAPREOLINAE_CYCLE * 0.3)",
        "127/value": "round(CAPREOLINAE_CYCLE * 2)",
        "128/value": "round(CAPREOLINAE_CYCLE * 0.3)",
        "129/value": "round(CAPREOLINAE_CYCLE * 2)",
        "130/value": "round(CAPREOLINAE_CYCLE * 0.3)",
        "131/value": "round(CAPREOLINAE_CYCLE * 1)",
        "132/value": "round(CAPREOLINAE_CYCLE * 0.3)",
        "133/value": "round(CAPREOLINAE_CYCLE * 4)",
        "134/value": "round(CAPREOLINAE_CYCLE * 0.6)",
        "135/value": "round(CAPREOLINAE_CYCLE * 1)",
        "136/value": "round(CAPREOLINAE_CYCLE * 1)",
        "137/value": "max(1, round(CAPREOLINAE_CYCLE * 175))",
        "138/value": "max(1, round(CAPREOLINAE_CYCLE * 175))",
        "139/value": "max(1, round(CAPREOLINAE_CYCLE * 88))",
        "140/value": "max(1, round(CAPREOLINAE_CYCLE * 88))",
        "141/value": "max(1, round(CAPREOLINAE_CYCLE * 262))",
        "142/value": "max(1, round(CAPREOLINAE_CYCLE * 222))",
        "143/value": "max(1, round(CAPREOLINAE_CYCLE * 262))",
        "144/value": "max(1, round(CAPREOLINAE_CYCLE * 175))",
        "145/value": "max(1, round(CAPREOLINAE_CYCLE * 88))",
        "146/value": "max(1, round(CAPREOLINAE_CYCLE * 88))",
        "147/value": "max(1, round(CAPREOLINAE_CYCLE * 700))",
        "148/value": "round(CAPREOLINAE_CYCLE * 11)",
        "149/value": "round(CAPREOLINAE_CYCLE * 2)",
        "150/value": "round(CAPREOLINAE_CYCLE * 4)",
        "151/value": "round(CAPREOLINAE_CYCLE * 1)",
        "152/value": "round(CAPREOLINAE_CYCLE * 60)",
        "153/value": "round(CAPREOLINAE_CYCLE * 54)",
        "154/value": "round(CAPREOLINAE_CYCLE * 48)",
        "155/value": "round(CAPREOLINAE_CYCLE * 48)",
        "156/value": "round(CAPREOLINAE_CYCLE * 42)",
        "157/value": "round(CAPREOLINAE_CYCLE * 40)",
        "158/value": "round(CAPREOLINAE_CYCLE * 39)",
        "159/value": "round(CAPREOLINAE_CYCLE * 40)",
        "160/value": "round(CAPREOLINAE_CYCLE * 42)",
        "161/value": "round(CAPREOLINAE_CYCLE * 42)",
        "162/value": "round(CAPREOLINAE_CYCLE * 42)"
      },
      "fastbreeding:patches/compatibility/fotsa/cervinae.json": {
        "0/value": "round(CERVINAE_CYCLE * 35.5)",
        "1/value": "round(CERVINAE_CYCLE * 1.5)",
        "2/value": "round(CERVINAE_CYCLE * 43)",
        "3/value": "round(CERVINAE_CYCLE * 2)",
        "4/value": "round(CERVINAE_CYCLE * 6)",
        "5/value": "round(CERVINAE_CYCLE * 1)",
        "6/value": "round(CERVINAE_CYCLE * 4.5)",
        "7/value": "round(CERVINAE_CYCLE * 0.5)",
        "8/value": "round(CERVINAE_CYCLE * 5.5)",
        "9/value": "round(CERVINAE_CYCLE * 0.5)",
        "10/value": "round(CERVINAE_CYCLE * 1)",
        "11/value": "round(CERVINAE_CYCLE * 0.3)",
        "12/value": "round(CERVINAE_CYCLE * 1)",
        "13/value": "round(CERVINAE_CYCLE * 1)",
        "14/value": "max(1, round(CERVINAE_CYCLE * 1050))",
        "15/value": "round(CERVINAE_CYCLE * 22)",
        "16/value": "round(CERVINAE_CYCLE * 8)",
        "17/value": "round(CERVINAE_CYCLE * 50)"
      },
      "fastbreeding:patches/compatibility/fotsa/elephantidae.json": {
        "0/value": "round(ELEPHANTIDAE_CYCLE * 4)",
        "1/value": "round(ELEPHANTIDAE_CYCLE * 2)",
        "2/value": "round(ELEPHANTIDAE_CYCLE * 94)",
        "3/value": "round(ELEPHANTIDAE_CYCLE * 6)",
        "4/value": "round(ELEPHANTIDAE_CYCLE * 82)",
        "5/value": "round(ELEPHANTIDAE_CYCLE * 4)",
        "6/value": "round(ELEPHANTIDAE_CYCLE * 106)",
        "7/value": "round(ELEPHANTIDAE_CYCLE * 6)",
        "8/value": "round(ELEPHANTIDAE_CYCLE * 36)",
        "9/value": "round(ELEPHANTIDAE_CYCLE * 2)",
        "10/value": "round(ELEPHANTIDAE_CYCLE * 180)",
        "11/value": "round(ELEPHANTIDAE_CYCLE * 8)",
        "12/value": "round(ELEPHANTIDAE_CYCLE * 26)",
        "13/value": "round(ELEPHANTIDAE_CYCLE * 2)",
        "14/value": "round(ELEPHANTIDAE_CYCLE * 114)",
        "15/value": "round(ELEPHANTIDAE_CYCLE * 6)",
        "16/value": "round(ELEPHANTIDAE_CYCLE * 11)",
        "17/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "18/value": "round(ELEPHANTIDAE_CYCLE * 144)",
        "19/value": "round(ELEPHANTIDAE_CYCLE * 6)",
        "20/value": "round(ELEPHANTIDAE_CYCLE * 126)",
        "21/value": "round(ELEPHANTIDAE_CYCLE * 6)",
        "22/value": "round(ELEPHANTIDAE_CYCLE * 212)",
        "23/value": "round(ELEPHANTIDAE_CYCLE * 12)",
        "24/value": "round(ELEPHANTIDAE_CYCLE * 68)",
        "25/value": "round(ELEPHANTIDAE_CYCLE * 6)",
        "26/value": "round(ELEPHANTIDAE_CYCLE * 336)",
        "27/value": "round(ELEPHANTIDAE_CYCLE * 18)",
        "28/value": "round(ELEPHANTIDAE_CYCLE * 48)",
        "29/value": "round(ELEPHANTIDAE_CYCLE * 2)",
        "30/value": "round(ELEPHANTIDAE_CYCLE * 170)",
        "31/value": "round(ELEPHANTIDAE_CYCLE * 10)",
        "32/value": "round(ELEPHANTIDAE_CYCLE * 17)",
        "33/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "34/value": "round(ELEPHANTIDAE_CYCLE * 13)",
        "35/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "36/value": "round(ELEPHANTIDAE_CYCLE * 13)",
        "37/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "38/value": "round(ELEPHANTIDAE_CYCLE * 15)",
        "39/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "40/value": "round(ELEPHANTIDAE_CYCLE * 9)",
        "41/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "42/value": "round(ELEPHANTIDAE_CYCLE * 16)",
        "43/value": "round(ELEPHANTIDAE_CYCLE * 2)",
        "44/value": "round(ELEPHANTIDAE_CYCLE * 3)",
        "45/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "46/value": "round(ELEPHANTIDAE_CYCLE * 10)",
        "47/value": "round(ELEPHANTIDAE_CYCLE * 2)",
        "48/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "49/value": "round(ELEPHANTIDAE_CYCLE * 0.6)",
        "50/value": "round(ELEPHANTIDAE_CYCLE * 94)",
        "51/value": "round(ELEPHANTIDAE_CYCLE * 6)",
        "52/value": "round(ELEPHANTIDAE_CYCLE * 82)",
        "53/value": "round(ELEPHANTIDAE_CYCLE * 4)",
        "54/value": "round(ELEPHANTIDAE_CYCLE * 106)",
        "55/value": "round(ELEPHANTIDAE_CYCLE * 6)",
        "56/value": "round(ELEPHANTIDAE_CYCLE * 36)",
        "57/value": "round(ELEPHANTIDAE_CYCLE * 2)",
        "58/value": "round(ELEPHANTIDAE_CYCLE * 180)",
        "59/value": "round(ELEPHANTIDAE_CYCLE * 8)",
        "60/value": "round(ELEPHANTIDAE_CYCLE * 26)",
        "61/value": "round(ELEPHANTIDAE_CYCLE * 2)",
        "62/value": "round(ELEPHANTIDAE_CYCLE * 114)",
        "63/value": "round(ELEPHANTIDAE_CYCLE * 6)",
        "64/value": "round(ELEPHANTIDAE_CYCLE * 11)",
        "65/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "66/value": "round(ELEPHANTIDAE_CYCLE * 144)",
        "67/value": "round(ELEPHANTIDAE_CYCLE * 6)",
        "68/value": "round(ELEPHANTIDAE_CYCLE * 126)",
        "69/value": "round(ELEPHANTIDAE_CYCLE * 6)",
        "70/value": "round(ELEPHANTIDAE_CYCLE * 212)",
        "71/value": "round(ELEPHANTIDAE_CYCLE * 12)",
        "72/value": "round(ELEPHANTIDAE_CYCLE * 68)",
        "73/value": "round(ELEPHANTIDAE_CYCLE * 6)",
        "74/value": "round(ELEPHANTIDAE_CYCLE * 336)",
        "75/value": "round(ELEPHANTIDAE_CYCLE * 18)",
        "76/value": "round(ELEPHANTIDAE_CYCLE * 48)",
        "77/value": "round(ELEPHANTIDAE_CYCLE * 2)",
        "78/value": "round(ELEPHANTIDAE_CYCLE * 170)",
        "79/value": "round(ELEPHANTIDAE_CYCLE * 10)",
        "80/value": "round(ELEPHANTIDAE_CYCLE * 17)",
        "81/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "82/value": "round(ELEPHANTIDAE_CYCLE * 13)",
        "83/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "84/value": "round(ELEPHANTIDAE_CYCLE * 13)",
        "85/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "86/value": "round(ELEPHANTIDAE_CYCLE * 15)",
        "87/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "88/value": "round(ELEPHANTIDAE_CYCLE * 9)",
        "89/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "90/value": "round(ELEPHANTIDAE_CYCLE * 16)",
        "91/value": "round(ELEPHANTIDAE_CYCLE * 2)",
        "92/value": "round(ELEPHANTIDAE_CYCLE * 3)",
        "93/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "94/value": "round(ELEPHANTIDAE_CYCLE * 10)",
        "95/value": "round(ELEPHANTIDAE_CYCLE * 2)",
        "96/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "97/value": "round(ELEPHANTIDAE_CYCLE * 0.6)",
        "98/value": "round(ELEPHANTIDAE_CYCLE * 38)",
        "99/value": "round(ELEPHANTIDAE_CYCLE * 2)",
        "100/value": "round(ELEPHANTIDAE_CYCLE * 32)",
        "101/value": "round(ELEPHANTIDAE_CYCLE * 2)",
        "102/value": "round(ELEPHANTIDAE_CYCLE * 43)",
        "103/value": "round(ELEPHANTIDAE_CYCLE * 2)",
        "104/value": "round(ELEPHANTIDAE_CYCLE * 14)",
        "105/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "106/value": "round(ELEPHANTIDAE_CYCLE * 71)",
        "107/value": "round(ELEPHANTIDAE_CYCLE * 4)",
        "108/value": "round(ELEPHANTIDAE_CYCLE * 10)",
        "109/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "110/value": "round(ELEPHANTIDAE_CYCLE * 72)",
        "111/value": "round(ELEPHANTIDAE_CYCLE * 3)",
        "112/value": "round(ELEPHANTIDAE_CYCLE * 2.5)",
        "113/value": "round(ELEPHANTIDAE_CYCLE * 0.5)",
        "114/value": "round(ELEPHANTIDAE_CYCLE * 57)",
        "115/value": "round(ELEPHANTIDAE_CYCLE * 3)",
        "116/value": "round(ELEPHANTIDAE_CYCLE * 49)",
        "117/value": "round(ELEPHANTIDAE_CYCLE * 3)",
        "118/value": "round(ELEPHANTIDAE_CYCLE * 85)",
        "119/value": "round(ELEPHANTIDAE_CYCLE * 5)",
        "120/value": "round(ELEPHANTIDAE_CYCLE * 28)",
        "121/value": "round(ELEPHANTIDAE_CYCLE * 2)",
        "122/value": "round(ELEPHANTIDAE_CYCLE * 135)",
        "123/value": "round(ELEPHANTIDAE_CYCLE * 7)",
        "124/value": "round(ELEPHANTIDAE_CYCLE * 18)",
        "125/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "126/value": "round(ELEPHANTIDAE_CYCLE * 106)",
        "127/value": "round(ELEPHANTIDAE_CYCLE * 5)",
        "128/value": "round(ELEPHANTIDAE_CYCLE * 5.5)",
        "129/value": "round(ELEPHANTIDAE_CYCLE * 0.5)",
        "130/value": "round(ELEPHANTIDAE_CYCLE * 3.5)",
        "131/value": "round(ELEPHANTIDAE_CYCLE * 0.5)",
        "132/value": "round(ELEPHANTIDAE_CYCLE * 3.5)",
        "133/value": "round(ELEPHANTIDAE_CYCLE * 0.5)",
        "134/value": "round(ELEPHANTIDAE_CYCLE * 4.5)",
        "135/value": "round(ELEPHANTIDAE_CYCLE * 0.5)",
        "136/value": "round(ELEPHANTIDAE_CYCLE * 2.5)",
        "137/value": "round(ELEPHANTIDAE_CYCLE * 0.5)",
        "138/value": "round(ELEPHANTIDAE_CYCLE * 5.5)",
        "139/value": "round(ELEPHANTIDAE_CYCLE * 0.5)",
        "140/value": "round(ELEPHANTIDAE_CYCLE * 1.5)",
        "141/value": "round(ELEPHANTIDAE_CYCLE * 0.5)",
        "142/value": "round(ELEPHANTIDAE_CYCLE * 5)",
        "143/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "144/value": "round(ELEPHANTIDAE_CYCLE * 0.5)",
        "145/value": "round(ELEPHANTIDAE_CYCLE * 0.3)",
        "146/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "147/value": "round(ELEPHANTIDAE_CYCLE * 1)",
        "148/value": "max(1, round(ELEPHANTIDAE_CYCLE * 2016))",
        "149/value": "max(1, round(ELEPHANTIDAE_CYCLE * 2016))",
        "150/value": "max(1, round(ELEPHANTIDAE_CYCLE * 2016))",
        "151/value": "max(1, round(ELEPHANTIDAE_CYCLE * 2016))",
        "152/value": "max(1, round(ELEPHANTIDAE_CYCLE * 2628))",
        "153/value": "max(1, round(ELEPHANTIDAE_CYCLE * 2016))",
        "154/value": "max(1, round(ELEPHANTIDAE_CYCLE * 2628))",
        "155/value": "max(1, round(ELEPHANTIDAE_CYCLE * 2628))",
        "156/value": "round(ELEPHANTIDAE_CYCLE * 90)",
        "157/value": "round(ELEPHANTIDAE_CYCLE * 54)",
        "158/value": "round(ELEPHANTIDAE_CYCLE * 121)",
        "159/value": "round(ELEPHANTIDAE_CYCLE * 121)",
        "160/value": "round(ELEPHANTIDAE_CYCLE * 140)",
        "161/value": "round(ELEPHANTIDAE_CYCLE * 140)",
        "162/value": "round(ELEPHANTIDAE_CYCLE * 135)",
        "163/value": "round(ELEPHANTIDAE_CYCLE * 115)",
        "164/value": "round(ELEPHANTIDAE_CYCLE * 135)",
        "165/value": "round(ELEPHANTIDAE_CYCLE * 37)"
      },
      "fastbreeding:patches/compatibility/fotsa/felinae.json": {
        "0/value": "round(FELINAE_CYCLE * 2)",
        "1/value": "round(FELINAE_CYCLE * 0.5)",
        "2/value": "round(FELINAE_CYCLE * 2)",
        "3/value": "round(FELINAE_CYCLE * 0.5)",
        "4/value": "round(FELINAE_CYCLE * 3)",
        "5/value": "round(FELINAE_CYCLE * 1)",
        "6/value": "round(FELINAE_CYCLE * 2)",
        "7/value": "round(FELINAE_CYCLE * 0.5)",
        "8/value": "round(FELINAE_CYCLE * 0.3)",
        "9/value": "round(FELINAE_CYCLE * 1)",
        "10/value": "round(FELINAE_CYCLE * 1)",
        "11/value": "round(FELINAE_CYCLE * 1)",
        "12/value": "round(FELINAE_CYCLE * 0.3)",
        "13/value": "round(FELINAE_CYCLE * 1)",
        "14/value": "round(FELINAE_CYCLE * 0.3)",
        "15/value": "round(FELINAE_CYCLE * 1)",
        "16/value": "round(FELINAE_CYCLE * 0.3)",
        "17/value": "round(FELINAE_CYCLE * 1)",
        "18/value": "round(FELINAE_CYCLE * 0.3)",
        "19/value": "round(FELINAE_CYCLE * 0.3)",
        "20/value": "max(1, round(FELINAE_CYCLE * 350))",
        "21/value": "max(1, round(FELINAE_CYCLE * 175))",
        "22/value": "max(1, round(FELINAE_CYCLE * 175))",
        "23/value": "max(1, round(FELINAE_CYCLE * 175))",
        "24/value": "max(1, round(FELINAE_CYCLE * 175))",
        "25/value": "round(FELINAE_CYCLE * 18)",
        "26/value": "round(FELINAE_CYCLE * 9)",
        "27/value": "round(FELINAE_CYCLE * 28)",
        "28/value": "round(FELINAE_CYCLE * 14)",
        "29/value": "round(FELINAE_CYCLE * 12)",
        "30/value": "round(FELINAE_CYCLE * 12)",
        "31/value": "round(FELINAE_CYCLE * 12)"
      },
      "fastbreeding:patches/compatibility/fotsa/iniidae.json": {
        "0/value": "round(INIIDAE_CYCLE * 25)",
        "1/value": "round(INIIDAE_CYCLE * 2)",
        "2/value": "round(INIIDAE_CYCLE * 20)",
        "3/value": "round(INIIDAE_CYCLE * 2)",
        "4/value": "round(INIIDAE_CYCLE * 1)",
        "5/value": "round(INIIDAE_CYCLE * 7)",
        "6/value": "round(INIIDAE_CYCLE * 1)",
        "7/value": "round(INIIDAE_CYCLE * 5.5)",
        "8/value": "round(INIIDAE_CYCLE * 0.5)",
        "9/value": "round(INIIDAE_CYCLE * 81)",
        "10/value": "round(INIIDAE_CYCLE * 73)",
        "11/value": "round(INIIDAE_CYCLE * 60)",
        "12/value": "round(INIIDAE_CYCLE * 8.5)",
        "13/value": "round(INIIDAE_CYCLE * 0.5)",
        "14/value": "round(INIIDAE_CYCLE * 1)",
        "15/value": "round(INIIDAE_CYCLE * 1)",
        "16/value": "round(INIIDAE_CYCLE * 0.3)",
        "17/value": "max(1, round(INIIDAE_CYCLE * 700))"
      },
      "fastbreeding:patches/compatibility/fotsa/machairodontinae.json": {
        "0/value": "round(MACHAIRODONTINAE_CYCLE * 2)",
        "1/value": "round(MACHAIRODONTINAE_CYCLE * 1)",
        "2/value": "round(MACHAIRODONTINAE_CYCLE * 0.5)",
        "3/value": "round(MACHAIRODONTINAE_CYCLE * 0.3)",
        "4/value": "round(MACHAIRODONTINAE_CYCLE * 1)",
        "5/value": "max(1, round(MACHAIRODONTINAE_CYCLE * 584))",
        "6/value": "round(MACHAIRODONTINAE_CYCLE * 4)",
        "7/value": "round(MACHAIRODONTINAE_CYCLE * 2)",
        "8/value": "round(MACHAIRODONTINAE_CYCLE * 16)",
        "9/value": "round(MACHAIRODONTINAE_CYCLE * 2)",
        "10/value": "round(MACHAIRODONTINAE_CYCLE * 23)",
        "11/value": "round(MACHAIRODONTINAE_CYCLE * 2)",
        "12/value": "round(MACHAIRODONTINAE_CYCLE * 15)",
        "13/value": "round(MACHAIRODONTINAE_CYCLE * 2)",
        "14/value": "round(MACHAIRODONTINAE_CYCLE * 2)",
        "15/value": "round(MACHAIRODONTINAE_CYCLE * 0.3)",
        "16/value": "round(MACHAIRODONTINAE_CYCLE * 1)",
        "17/value": "round(MACHAIRODONTINAE_CYCLE * 11)",
        "18/value": "round(MACHAIRODONTINAE_CYCLE * 4)",
        "19/value": "round(MACHAIRODONTINAE_CYCLE * 24)",
        "20/value": "round(MACHAIRODONTINAE_CYCLE * 26)",
        "21/value": "round(MACHAIRODONTINAE_CYCLE * 24)",
        "22/value": "round(MACHAIRODONTINAE_CYCLE * 23)",
        "23/value": "round(MACHAIRODONTINAE_CYCLE * 2)",
        "24/value": "round(MACHAIRODONTINAE_CYCLE * 25)",
        "25/value": "round(MACHAIRODONTINAE_CYCLE * 3)",
        "26/value": "round(MACHAIRODONTINAE_CYCLE * 21)",
        "27/value": "round(MACHAIRODONTINAE_CYCLE * 2)",
        "28/value": "round(MACHAIRODONTINAE_CYCLE * 4)",
        "29/value": "round(MACHAIRODONTINAE_CYCLE * 0.3)",
        "30/value": "round(MACHAIRODONTINAE_CYCLE * 1)",
        "31/value": "round(MACHAIRODONTINAE_CYCLE * 0.1)"
      },
      "fastbreeding:patches/compatibility/fotsa/manidae.json": {
        "0/value": "round(MANIDAE_CYCLE * 1)",
        "1/value": "round(MANIDAE_CYCLE * 0.5)",
        "2/value": "round(MANIDAE_CYCLE * 1)",
        "3/value": "round(MANIDAE_CYCLE * 0.5)",
        "4/value": "round(MANIDAE_CYCLE * 1)",
        "5/value": "round(MANIDAE_CYCLE * 0.5)",
        "6/value": "round(MANIDAE_CYCLE * 1)",
        "7/value": "round(MANIDAE_CYCLE * 0.5)",
        "8/value": "round(MANIDAE_CYCLE * 1)",
        "9/value": "round(MANIDAE_CYCLE * 0.3)",
        "10/value": "round(MANIDAE_CYCLE * 1)",
        "11/value": "round(MANIDAE_CYCLE * 0.5)",
        "12/value": "round(MANIDAE_CYCLE * 1)",
        "13/value": "round(MANIDAE_CYCLE * 0.3)",
        "14/value": "round(MANIDAE_CYCLE * 1)",
        "15/value": "round(MANIDAE_CYCLE * 0.3)",
        "16/value": "round(MANIDAE_CYCLE * 2.5)",
        "17/value": "round(MANIDAE_CYCLE * 0.5)",
        "18/value": "round(MANIDAE_CYCLE * 4)",
        "19/value": "round(MANIDAE_CYCLE * 0.5)",
        "20/value": "round(MANIDAE_CYCLE * 0.3)",
        "21/value": "round(MANIDAE_CYCLE * 1)",
        "22/value": "max(1, round(MANIDAE_CYCLE * 350))",
        "23/value": "max(1, round(MANIDAE_CYCLE * 87))",
        "24/value": "max(1, round(MANIDAE_CYCLE * 87))",
        "25/value": "max(1, round(MANIDAE_CYCLE * 87))",
        "26/value": "round(MANIDAE_CYCLE * 11)",
        "27/value": "round(MANIDAE_CYCLE * 4)",
        "28/value": "round(MANIDAE_CYCLE * 28)",
        "29/value": "round(MANIDAE_CYCLE * 14)",
        "30/value": "round(MANIDAE_CYCLE * 25)",
        "31/value": "round(MANIDAE_CYCLE * 28)",
        "32/value": "round(MANIDAE_CYCLE * 25)",
        "33/value": "round(MANIDAE_CYCLE * 25)",
        "34/value": "round(MANIDAE_CYCLE * 14)"
      },
      "fastbreeding:patches/compatibility/fotsa/meiolaniidae.json": {
        "0/value": "max(1, round(MEIOLANIIDAE_CYCLE * 172))",
        "1/value": "max(1, round(MEIOLANIIDAE_CYCLE * 300))",
        "2/value": "round(MEIOLANIIDAE_CYCLE * 12)",
        "3/value": "round(MEIOLANIIDAE_CYCLE * 1)",
        "4/value": "round(MEIOLANIIDAE_CYCLE * 0.5)",
        "5/value": "round(MEIOLANIIDAE_CYCLE * 12)",
        "6/value": "round(MEIOLANIIDAE_CYCLE * 1)",
        "7/value": "round(MEIOLANIIDAE_CYCLE * 0.5)",
        "8/value": "round(MEIOLANIIDAE_CYCLE * 1)",
        "9/value": "round(MEIOLANIIDAE_CYCLE * 4.5)",
        "10/value": "round(MEIOLANIIDAE_CYCLE * 0.3)",
        "11/value": "max(1, round(MEIOLANIIDAE_CYCLE * 3500))",
        "12/value": "round(MEIOLANIIDAE_CYCLE * 75)",
        "13/value": "round(MEIOLANIIDAE_CYCLE * 65)",
        "14/value": "round(MEIOLANIIDAE_CYCLE * 10)"
      },
      "fastbreeding:patches/compatibility/fotsa/pantherinae.json": {
        "0/value": "round(PANTHERINAE_CYCLE * 2)",
        "1/value": "round(PANTHERINAE_CYCLE * 1)",
        "2/value": "round(PANTHERINAE_CYCLE * 1)",
        "3/value": "round(PANTHERINAE_CYCLE * 0.5)",
        "4/value": "round(PANTHERINAE_CYCLE * 0.5)",
        "5/value": "round(PANTHERINAE_CYCLE * 0.3)",
        "6/value": "round(PANTHERINAE_CYCLE * 1)",
        "7/value": "round(PANTHERINAE_CYCLE * 336)",
        "8/value": "round(PANTHERINAE_CYCLE * 2)",
        "9/value": "round(PANTHERINAE_CYCLE * 1)",
        "10/value": "round(PANTHERINAE_CYCLE * 2)",
        "11/value": "round(PANTHERINAE_CYCLE * 1)",
        "12/value": "round(PANTHERINAE_CYCLE * 1)",
        "13/value": "round(PANTHERINAE_CYCLE * 0.3)",
        "14/value": "round(PANTHERINAE_CYCLE * 1)",
        "15/value": "round(PANTHERINAE_CYCLE * 0.3)",
        "16/value": "round(PANTHERINAE_CYCLE * 1)",
        "17/value": "round(PANTHERINAE_CYCLE * 11)",
        "18/value": "round(PANTHERINAE_CYCLE * 4)",
        "19/value": "round(PANTHERINAE_CYCLE * 18)",
        "20/value": "round(PANTHERINAE_CYCLE * 2)",
        "21/value": "round(PANTHERINAE_CYCLE * 1)",
        "22/value": "round(PANTHERINAE_CYCLE * 2)",
        "23/value": "round(PANTHERINAE_CYCLE * 1)",
        "24/value": "round(PANTHERINAE_CYCLE * 1)",
        "25/value": "round(PANTHERINAE_CYCLE * 0.3)",
        "26/value": "round(PANTHERINAE_CYCLE * 1)",
        "27/value": "round(PANTHERINAE_CYCLE * 0.3)",
        "28/value": "round(PANTHERINAE_CYCLE * 1)",
        "29/value": "round(PANTHERINAE_CYCLE * 4)",
        "30/value": "round(PANTHERINAE_CYCLE * 2)",
        "31/value": "round(PANTHERINAE_CYCLE * 1)",
        "32/value": "round(PANTHERINAE_CYCLE * 0.5)",
        "33/value": "round(PANTHERINAE_CYCLE * 0.5)",
        "34/value": "round(PANTHERINAE_CYCLE * 0.3)",
        "35/value": "round(PANTHERINAE_CYCLE * 1)",
        "36/value": "max(1, round(PANTHERINAE_CYCLE * 438))",
        "37/value": "max(1, round(PANTHERINAE_CYCLE * 584))",
        "38/value": "max(1, round(PANTHERINAE_CYCLE * 584))",
        "39/value": "max(1, round(PANTHERINAE_CYCLE * 438))",
        "40/value": "max(1, round(PANTHERINAE_CYCLE * 438))",
        "41/value": "max(1, round(PANTHERINAE_CYCLE * 584))",
        "42/value": "max(1, round(PANTHERINAE_CYCLE * 584))",
        "43/value": "max(1, round(PANTHERINAE_CYCLE * 438))",
        "44/value": "round(PANTHERINAE_CYCLE * 19)",
        "45/value": "round(PANTHERINAE_CYCLE * 2)",
        "46/value": "round(PANTHERINAE_CYCLE * 15)",
        "47/value": "round(PANTHERINAE_CYCLE * 2)",
        "48/value": "round(PANTHERINAE_CYCLE * 6)",
        "49/value": "round(PANTHERINAE_CYCLE * 2)",
        "50/value": "round(PANTHERINAE_CYCLE * 4)",
        "51/value": "round(PANTHERINAE_CYCLE * 2)",
        "52/value": "round(PANTHERINAE_CYCLE * 16)",
        "53/value": "round(PANTHERINAE_CYCLE * 2)",
        "54/value": "round(PANTHERINAE_CYCLE * 15)",
        "55/value": "round(PANTHERINAE_CYCLE * 2)",
        "56/value": "round(PANTHERINAE_CYCLE * 4)",
        "57/value": "round(PANTHERINAE_CYCLE * 2)",
        "58/value": "round(PANTHERINAE_CYCLE * 1)",
        "59/value": "round(PANTHERINAE_CYCLE * 0.3)",
        "60/value": "round(PANTHERINAE_CYCLE * 1)",
        "61/value": "round(PANTHERINAE_CYCLE * 0.3)",
        "62/value": "round(PANTHERINAE_CYCLE * 1)",
        "63/value": "round(PANTHERINAE_CYCLE * 0.3)",
        "64/value": "round(PANTHERINAE_CYCLE * 2)",
        "65/value": "round(PANTHERINAE_CYCLE * 0.3)",
        "66/value": "round(PANTHERINAE_CYCLE * 1)",
        "67/value": "round(PANTHERINAE_CYCLE * 11)",
        "68/value": "round(PANTHERINAE_CYCLE * 4)",
        "69/value": "round(PANTHERINAE_CYCLE * 18)",
        "70/value": "round(PANTHERINAE_CYCLE * 24)",
        "71/value": "round(PANTHERINAE_CYCLE * 22)",
        "72/value": "round(PANTHERINAE_CYCLE * 18)",
        "73/value": "round(PANTHERINAE_CYCLE * 18)",
        "74/value": "round(PANTHERINAE_CYCLE * 24)",
        "75/value": "round(PANTHERINAE_CYCLE * 20)",
        "76/value": "round(PANTHERINAE_CYCLE * 18)",
        "77/value": "round(PANTHERINAE_CYCLE * 24)",
        "78/value": "round(PANTHERINAE_CYCLE * 3)",
        "79/value": "round(PANTHERINAE_CYCLE * 21)",
        "80/value": "round(PANTHERINAE_CYCLE * 2)",
        "81/value": "round(PANTHERINAE_CYCLE * 7)",
        "82/value": "round(PANTHERINAE_CYCLE * 2)",
        "83/value": "round(PANTHERINAE_CYCLE * 4)",
        "84/value": "round(PANTHERINAE_CYCLE * 2)",
        "85/value": "round(PANTHERINAE_CYCLE * 22)",
        "86/value": "round(PANTHERINAE_CYCLE * 2)",
        "87/value": "round(PANTHERINAE_CYCLE * 20)",
        "88/value": "round(PANTHERINAE_CYCLE * 2)",
        "89/value": "round(PANTHERINAE_CYCLE * 4)",
        "90/value": "round(PANTHERINAE_CYCLE * 2)",
        "91/value": "round(PANTHERINAE_CYCLE * 1)",
        "92/value": "round(PANTHERINAE_CYCLE * 0.3)",
        "93/value": "round(PANTHERINAE_CYCLE * 1)",
        "94/value": "round(PANTHERINAE_CYCLE * 0.3)",
        "95/value": "round(PANTHERINAE_CYCLE * 1)",
        "96/value": "round(PANTHERINAE_CYCLE * 0.3)",
        "97/value": "round(PANTHERINAE_CYCLE * 2)",
        "98/value": "round(PANTHERINAE_CYCLE * 0.3)",
        "99/value": "round(PANTHERINAE_CYCLE * 1)"
      },
      "fastbreeding:patches/compatibility/fotsa/rhinocerotidae.json": {
        "0/value": "round(RHINOCEROTIDAE_CYCLE * 4)",
        "1/value": "round(RHINOCEROTIDAE_CYCLE * 2)",
        "2/value": "round(RHINOCEROTIDAE_CYCLE * 56)",
        "3/value": "round(RHINOCEROTIDAE_CYCLE * 6)",
        "4/value": "round(RHINOCEROTIDAE_CYCLE * 50)",
        "5/value": "round(RHINOCEROTIDAE_CYCLE * 5)",
        "6/value": "round(RHINOCEROTIDAE_CYCLE * 20)",
        "7/value": "round(RHINOCEROTIDAE_CYCLE * 2)",
        "8/value": "round(RHINOCEROTIDAE_CYCLE * 38)",
        "9/value": "round(RHINOCEROTIDAE_CYCLE * 4)",
        "10/value": "round(RHINOCEROTIDAE_CYCLE * 38)",
        "11/value": "round(RHINOCEROTIDAE_CYCLE * 4)",
        "12/value": "round(RHINOCEROTIDAE_CYCLE * 54)",
        "13/value": "round(RHINOCEROTIDAE_CYCLE * 6)",
        "14/value": "round(RHINOCEROTIDAE_CYCLE * 76)",
        "15/value": "round(RHINOCEROTIDAE_CYCLE * 8)",
        "16/value": "round(RHINOCEROTIDAE_CYCLE * 68)",
        "17/value": "round(RHINOCEROTIDAE_CYCLE * 7)",
        "18/value": "round(RHINOCEROTIDAE_CYCLE * 28)",
        "19/value": "round(RHINOCEROTIDAE_CYCLE * 3)",
        "20/value": "round(RHINOCEROTIDAE_CYCLE * 48)",
        "21/value": "round(RHINOCEROTIDAE_CYCLE * 5)",
        "22/value": "round(RHINOCEROTIDAE_CYCLE * 48)",
        "23/value": "round(RHINOCEROTIDAE_CYCLE * 4)",
        "24/value": "round(RHINOCEROTIDAE_CYCLE * 70)",
        "25/value": "round(RHINOCEROTIDAE_CYCLE * 8)",
        "26/value": "round(RHINOCEROTIDAE_CYCLE * 10)",
        "27/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "28/value": "round(RHINOCEROTIDAE_CYCLE * 10)",
        "29/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "30/value": "round(RHINOCEROTIDAE_CYCLE * 8)",
        "31/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "32/value": "round(RHINOCEROTIDAE_CYCLE * 10)",
        "33/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "34/value": "round(RHINOCEROTIDAE_CYCLE * 10)",
        "35/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "36/value": "round(RHINOCEROTIDAE_CYCLE * 10)",
        "37/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "38/value": "round(RHINOCEROTIDAE_CYCLE * 56)",
        "39/value": "round(RHINOCEROTIDAE_CYCLE * 6)",
        "40/value": "round(RHINOCEROTIDAE_CYCLE * 50)",
        "41/value": "round(RHINOCEROTIDAE_CYCLE * 5)",
        "42/value": "round(RHINOCEROTIDAE_CYCLE * 20)",
        "43/value": "round(RHINOCEROTIDAE_CYCLE * 2)",
        "44/value": "round(RHINOCEROTIDAE_CYCLE * 38)",
        "45/value": "round(RHINOCEROTIDAE_CYCLE * 4)",
        "46/value": "round(RHINOCEROTIDAE_CYCLE * 38)",
        "47/value": "round(RHINOCEROTIDAE_CYCLE * 4)",
        "48/value": "round(RHINOCEROTIDAE_CYCLE * 54)",
        "49/value": "round(RHINOCEROTIDAE_CYCLE * 6)",
        "50/value": "round(RHINOCEROTIDAE_CYCLE * 76)",
        "51/value": "round(RHINOCEROTIDAE_CYCLE * 8)",
        "52/value": "round(RHINOCEROTIDAE_CYCLE * 68)",
        "53/value": "round(RHINOCEROTIDAE_CYCLE * 7)",
        "54/value": "round(RHINOCEROTIDAE_CYCLE * 28)",
        "55/value": "round(RHINOCEROTIDAE_CYCLE * 3)",
        "56/value": "round(RHINOCEROTIDAE_CYCLE * 48)",
        "57/value": "round(RHINOCEROTIDAE_CYCLE * 5)",
        "58/value": "round(RHINOCEROTIDAE_CYCLE * 48)",
        "59/value": "round(RHINOCEROTIDAE_CYCLE * 4)",
        "60/value": "round(RHINOCEROTIDAE_CYCLE * 70)",
        "61/value": "round(RHINOCEROTIDAE_CYCLE * 8)",
        "62/value": "round(RHINOCEROTIDAE_CYCLE * 10)",
        "63/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "64/value": "round(RHINOCEROTIDAE_CYCLE * 10)",
        "65/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "66/value": "round(RHINOCEROTIDAE_CYCLE * 8)",
        "67/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "68/value": "round(RHINOCEROTIDAE_CYCLE * 10)",
        "69/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "70/value": "round(RHINOCEROTIDAE_CYCLE * 10)",
        "71/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "72/value": "round(RHINOCEROTIDAE_CYCLE * 10)",
        "73/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "74/value": "round(RHINOCEROTIDAE_CYCLE * 23)",
        "75/value": "round(RHINOCEROTIDAE_CYCLE * 2)",
        "76/value": "round(RHINOCEROTIDAE_CYCLE * 20)",
        "77/value": "round(RHINOCEROTIDAE_CYCLE * 2)",
        "78/value": "round(RHINOCEROTIDAE_CYCLE * 8)",
        "79/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "80/value": "round(RHINOCEROTIDAE_CYCLE * 15)",
        "81/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "82/value": "round(RHINOCEROTIDAE_CYCLE * 15)",
        "83/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "84/value": "round(RHINOCEROTIDAE_CYCLE * 21)",
        "85/value": "round(RHINOCEROTIDAE_CYCLE * 2)",
        "86/value": "round(RHINOCEROTIDAE_CYCLE * 31)",
        "87/value": "round(RHINOCEROTIDAE_CYCLE * 3)",
        "88/value": "round(RHINOCEROTIDAE_CYCLE * 27)",
        "89/value": "round(RHINOCEROTIDAE_CYCLE * 3)",
        "90/value": "round(RHINOCEROTIDAE_CYCLE * 10)",
        "91/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "92/value": "round(RHINOCEROTIDAE_CYCLE * 19)",
        "93/value": "round(RHINOCEROTIDAE_CYCLE * 2)",
        "94/value": "round(RHINOCEROTIDAE_CYCLE * 19)",
        "95/value": "round(RHINOCEROTIDAE_CYCLE * 2)",
        "96/value": "round(RHINOCEROTIDAE_CYCLE * 28)",
        "97/value": "round(RHINOCEROTIDAE_CYCLE * 3)",
        "98/value": "round(RHINOCEROTIDAE_CYCLE * 5)",
        "99/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "100/value": "round(RHINOCEROTIDAE_CYCLE * 5)",
        "101/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "102/value": "round(RHINOCEROTIDAE_CYCLE * 3)",
        "103/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "104/value": "round(RHINOCEROTIDAE_CYCLE * 4)",
        "105/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "106/value": "round(RHINOCEROTIDAE_CYCLE * 4)",
        "107/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "108/value": "round(RHINOCEROTIDAE_CYCLE * 5)",
        "109/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "110/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "111/value": "round(RHINOCEROTIDAE_CYCLE * 1)",
        "112/value": "max(1, round(RHINOCEROTIDAE_CYCLE * 1050))",
        "113/value": "max(1, round(RHINOCEROTIDAE_CYCLE * 1050))",
        "114/value": "max(1, round(RHINOCEROTIDAE_CYCLE * 1050))",
        "115/value": "max(1, round(RHINOCEROTIDAE_CYCLE * 876))",
        "116/value": "max(1, round(RHINOCEROTIDAE_CYCLE * 700))",
        "117/value": "max(1, round(RHINOCEROTIDAE_CYCLE * 700))",
        "118/value": "round(RHINOCEROTIDAE_CYCLE * 90)",
        "119/value": "round(RHINOCEROTIDAE_CYCLE * 54)",
        "120/value": "round(RHINOCEROTIDAE_CYCLE * 97)",
        "121/value": "round(RHINOCEROTIDAE_CYCLE * 100)",
        "122/value": "round(RHINOCEROTIDAE_CYCLE * 91)",
        "123/value": "round(RHINOCEROTIDAE_CYCLE * 91)",
        "124/value": "round(RHINOCEROTIDAE_CYCLE * 91)",
        "125/value": "round(RHINOCEROTIDAE_CYCLE * 95)"
      },
      "fastbreeding:patches/compatibility/fotsa/sirenia.json": {
        "0/value": "round(SIRENIA_CYCLE * 13)",
        "1/value": "round(SIRENIA_CYCLE * 1.5)",
        "2/value": "round(SIRENIA_CYCLE * 338)",
        "3/value": "round(SIRENIA_CYCLE * 38)",
        "4/value": "round(SIRENIA_CYCLE * 12)",
        "5/value": "round(SIRENIA_CYCLE * 1)",
        "6/value": "round(SIRENIA_CYCLE * 20)",
        "7/value": "round(SIRENIA_CYCLE * 2.5)",
        "8/value": "round(SIRENIA_CYCLE * 15)",
        "9/value": "round(SIRENIA_CYCLE * 1.5)",
        "10/value": "round(SIRENIA_CYCLE * 11)",
        "11/value": "round(SIRENIA_CYCLE * 1)",
        "12/value": "round(SIRENIA_CYCLE * 275)",
        "13/value": "round(SIRENIA_CYCLE * 25)",
        "14/value": "round(SIRENIA_CYCLE * 10)",
        "15/value": "round(SIRENIA_CYCLE * 1)",
        "16/value": "round(SIRENIA_CYCLE * 16)",
        "17/value": "round(SIRENIA_CYCLE * 2)",
        "18/value": "round(SIRENIA_CYCLE * 14)",
        "19/value": "round(SIRENIA_CYCLE * 1.5)",
        "20/value": "round(SIRENIA_CYCLE * 3)",
        "21/value": "round(SIRENIA_CYCLE * 0.5)",
        "22/value": "round(SIRENIA_CYCLE * 16)",
        "23/value": "round(SIRENIA_CYCLE * 2)",
        "24/value": "round(SIRENIA_CYCLE * 1.5)",
        "25/value": "round(SIRENIA_CYCLE * 0.5)",
        "26/value": "round(SIRENIA_CYCLE * 3)",
        "27/value": "round(SIRENIA_CYCLE * 0.5)",
        "28/value": "round(SIRENIA_CYCLE * 3)",
        "29/value": "round(SIRENIA_CYCLE * 0.5)",
        "30/value": "round(SIRENIA_CYCLE * 13)",
        "31/value": "round(SIRENIA_CYCLE * 1.5)",
        "32/value": "round(SIRENIA_CYCLE * 338)",
        "33/value": "round(SIRENIA_CYCLE * 38)",
        "34/value": "round(SIRENIA_CYCLE * 12)",
        "35/value": "round(SIRENIA_CYCLE * 1)",
        "36/value": "round(SIRENIA_CYCLE * 20)",
        "37/value": "round(SIRENIA_CYCLE * 2.5)",
        "38/value": "round(SIRENIA_CYCLE * 15)",
        "39/value": "round(SIRENIA_CYCLE * 1.5)",
        "40/value": "round(SIRENIA_CYCLE * 11)",
        "41/value": "round(SIRENIA_CYCLE * 1)",
        "42/value": "round(SIRENIA_CYCLE * 275)",
        "43/value": "round(SIRENIA_CYCLE * 25)",
        "44/value": "round(SIRENIA_CYCLE * 10)",
        "45/value": "round(SIRENIA_CYCLE * 1)",
        "46/value": "round(SIRENIA_CYCLE * 16)",
        "47/value": "round(SIRENIA_CYCLE * 2)",
        "48/value": "round(SIRENIA_CYCLE * 14)",
        "49/value": "round(SIRENIA_CYCLE * 1.5)",
        "50/value": "round(SIRENIA_CYCLE * 3)",
        "51/value": "round(SIRENIA_CYCLE * 0.5)",
        "52/value": "round(SIRENIA_CYCLE * 16)",
        "53/value": "round(SIRENIA_CYCLE * 2)",
        "54/value": "round(SIRENIA_CYCLE * 1.5)",
        "55/value": "round(SIRENIA_CYCLE * 0.5)",
        "56/value": "round(SIRENIA_CYCLE * 3)",
        "57/value": "round(SIRENIA_CYCLE * 0.5)",
        "58/value": "round(SIRENIA_CYCLE * 3)",
        "59/value": "round(SIRENIA_CYCLE * 0.5)",
        "60/value": "round(SIRENIA_CYCLE * 1)",
        "61/value": "round(SIRENIA_CYCLE * 1)",
        "62/value": "round(SIRENIA_CYCLE * 13)",
        "63/value": "round(SIRENIA_CYCLE * 1)",
        "64/value": "round(SIRENIA_CYCLE * 337)",
        "65/value": "round(SIRENIA_CYCLE * 37)",
        "66/value": "round(SIRENIA_CYCLE * 12)",
        "67/value": "round(SIRENIA_CYCLE * 1)",
        "68/value": "round(SIRENIA_CYCLE * 20)",
        "69/value": "round(SIRENIA_CYCLE * 2)",
        "70/value": "round(SIRENIA_CYCLE * 15)",
        "71/value": "round(SIRENIA_CYCLE * 1)",
        "72/value": "round(SIRENIA_CYCLE * 11)",
        "73/value": "round(SIRENIA_CYCLE * 1)",
        "74/value": "round(SIRENIA_CYCLE * 225)",
        "75/value": "round(SIRENIA_CYCLE * 25)",
        "76/value": "round(SIRENIA_CYCLE * 10)",
        "77/value": "round(SIRENIA_CYCLE * 1)",
        "78/value": "round(SIRENIA_CYCLE * 16)",
        "79/value": "round(SIRENIA_CYCLE * 2)",
        "80/value": "round(SIRENIA_CYCLE * 14)",
        "81/value": "round(SIRENIA_CYCLE * 1)",
        "82/value": "round(SIRENIA_CYCLE * 3)",
        "83/value": "round(SIRENIA_CYCLE * 1)",
        "84/value": "round(SIRENIA_CYCLE * 16)",
        "85/value": "round(SIRENIA_CYCLE * 2)",
        "86/value": "round(SIRENIA_CYCLE * 1)",
        "87/value": "round(SIRENIA_CYCLE * 1)",
        "88/value": "round(SIRENIA_CYCLE * 3)",
        "89/value": "round(SIRENIA_CYCLE * 1)",
        "90/value": "round(SIRENIA_CYCLE * 3)",
        "91/value": "round(SIRENIA_CYCLE * 1)",
        "92/value": "max(1, round(SIRENIA_CYCLE * 1400))",
        "93/value": "max(1, round(SIRENIA_CYCLE * 2200))",
        "94/value": "max(1, round(SIRENIA_CYCLE * 1752))",
        "95/value": "max(1, round(SIRENIA_CYCLE * 876))",
        "96/value": "max(1, round(SIRENIA_CYCLE * 876))",
        "97/value": "round(SIRENIA_CYCLE * 146)",
        "98/value": "round(SIRENIA_CYCLE * 73)",
        "99/value": "round(SIRENIA_CYCLE * 85)",
        "100/value": "round(SIRENIA_CYCLE * 85)",
        "101/value": "round(SIRENIA_CYCLE * 73)",
        "102/value": "round(SIRENIA_CYCLE * 73)",
        "103/value": "round(SIRENIA_CYCLE * 73)"
      },
      "fastbreeding:patches/compatibility/fotsa/spheniscidae.json": {
        "0/value": "max(1, round(SPHENISCIDAE_CYCLE * 172))",
        "1/value": "max(1, round(SPHENISCIDAE_CYCLE * 321))",
        "2/value": "max(1, round(SPHENISCIDAE_CYCLE * 270))",
        "3/value": "max(1, round(SPHENISCIDAE_CYCLE * 200))",
        "4/value": "max(1, round(SPHENISCIDAE_CYCLE * 200))",
        "5/value": "round(SPHENISCIDAE_CYCLE * 1)",
        "6/value": "round(SPHENISCIDAE_CYCLE * 0.5)",
        "7/value": "round(SPHENISCIDAE_CYCLE * 0.5)",
        "8/value": "round(SPHENISCIDAE_CYCLE * 2)",
        "9/value": "round(SPHENISCIDAE_CYCLE * 0.5)",
        "10/value": "round(SPHENISCIDAE_CYCLE * 3)",
        "11/value": "round(SPHENISCIDAE_CYCLE * 0.5)",
        "12/value": "round(SPHENISCIDAE_CYCLE * 0.5)",
        "13/value": "round(SPHENISCIDAE_CYCLE * 0.75)",
        "14/value": "round(SPHENISCIDAE_CYCLE * 0.25)",
        "15/value": "round(SPHENISCIDAE_CYCLE * 1)",
        "16/value": "round(SPHENISCIDAE_CYCLE * 0.5)",
        "17/value": "round(SPHENISCIDAE_CYCLE * 0.5)",
        "18/value": "round(SPHENISCIDAE_CYCLE * 2)",
        "19/value": "round(SPHENISCIDAE_CYCLE * 0.5)",
        "20/value": "round(SPHENISCIDAE_CYCLE * 3)",
        "21/value": "round(SPHENISCIDAE_CYCLE * 0.5)",
        "22/value": "round(SPHENISCIDAE_CYCLE * 0.5)",
        "23/value": "round(SPHENISCIDAE_CYCLE * 0.75)",
        "24/value": "round(SPHENISCIDAE_CYCLE * 0.25)",
        "25/value": "round(SPHENISCIDAE_CYCLE * 1)",
        "26/value": "round(SPHENISCIDAE_CYCLE * 4)",
        "27/value": "round(SPHENISCIDAE_CYCLE * 1)",
        "28/value": "round(SPHENISCIDAE_CYCLE * 15)",
        "29/value": "round(SPHENISCIDAE_CYCLE * 7)",
        "30/value": "round(SPHENISCIDAE_CYCLE * 2.3)",
        "31/value": "round(SPHENISCIDAE_CYCLE * 0.3)",
        "32/value": "round(SPHENISCIDAE_CYCLE * 2.3)",
        "33/value": "round(SPHENISCIDAE_CYCLE * 0.3)",
        "34/value": "round(SPHENISCIDAE_CYCLE * 1.3)",
        "35/value": "round(SPHENISCIDAE_CYCLE * 0.3)",
        "36/value": "round(SPHENISCIDAE_CYCLE * 1.3)",
        "37/value": "round(SPHENISCIDAE_CYCLE * 0.3)",
        "38/value": "max(1, round(SPHENISCIDAE_CYCLE * 800))",
        "39/value": "round(SPHENISCIDAE_CYCLE * 81)",
        "40/value": "round(SPHENISCIDAE_CYCLE * 73)",
        "41/value": "round(SPHENISCIDAE_CYCLE * 10)"
      },
      "fastbreeding:patches/compatibility/fotsa/thylacinidae.json": {
        "0/value": "round(THYLACINIDAE_CYCLE * 1)",
        "1/value": "round(THYLACINIDAE_CYCLE * 0.5)",
        "2/value": "round(THYLACINIDAE_CYCLE * 1)",
        "3/value": "round(THYLACINIDAE_CYCLE * 0.5)",
        "4/value": "round(THYLACINIDAE_CYCLE * 1)",
        "5/value": "round(THYLACINIDAE_CYCLE * 0.05)",
        "6/value": "round(THYLACINIDAE_CYCLE * 0.05)",
        "7/value": "round(THYLACINIDAE_CYCLE * 18)",
        "8/value": "round(THYLACINIDAE_CYCLE * 9)",
        "9/value": "round(THYLACINIDAE_CYCLE * 28)",
        "10/value": "round(THYLACINIDAE_CYCLE * 24)",
        "11/value": "round(THYLACINIDAE_CYCLE * 24)",
        "12/value": "round(THYLACINIDAE_CYCLE * 0.3)",
        "13/value": "round(THYLACINIDAE_CYCLE * 1)",
        "14/value": "max(1, round(THYLACINIDAE_CYCLE * 350))"
      },
      "fastbreeding:patches/compatibility/fotsa/viverridae.json": {
        "0/value": "round(VIVERRIDAE_CYCLE * 0.5)",
        "1/value": "round(VIVERRIDAE_CYCLE * 0.1)",
        "2/value": "round(VIVERRIDAE_CYCLE * 1)",
        "3/value": "max(1, round(VIVERRIDAE_CYCLE * 350))",
        "4/value": "max(1, round(VIVERRIDAE_CYCLE * 525))",
        "5/value": "round(VIVERRIDAE_CYCLE * 18)",
        "6/value": "round(VIVERRIDAE_CYCLE * 9)",
        "7/value": "round(VIVERRIDAE_CYCLE * 28)",
        "8/value": "round(VIVERRIDAE_CYCLE * 18)",
        "9/value": "round(VIVERRIDAE_CYCLE * 1.5)",
        "10/value": "round(VIVERRIDAE_CYCLE * 0.5)",
        "11/value": "round(VIVERRIDAE_CYCLE * 1.5)",
        "12/value": "round(VIVERRIDAE_CYCLE * 0.5)",
        "13/value": "round(VIVERRIDAE_CYCLE * 1.5)",
        "14/value": "round(VIVERRIDAE_CYCLE * 0.5)",
        "15/value": "round(VIVERRIDAE_CYCLE * 1.5)",
        "16/value": "round(VIVERRIDAE_CYCLE * 0.5)",
        "17/value": "round(VIVERRIDAE_CYCLE * 1.5)",
        "18/value": "round(VIVERRIDAE_CYCLE * 0.5)",
        "19/value": "round(VIVERRIDAE_CYCLE * 1.5)",
        "20/value": "round(VIVERRIDAE_CYCLE * 0.5)",
        "21/value": "round(VIVERRIDAE_CYCLE * 0.5)",
        "22/value": "round(VIVERRIDAE_CYCLE * 0.1)",
        "23/value": "round(VIVERRIDAE_CYCLE * 1)",
        "24/value": "max(1, round(VIVERRIDAE_CYCLE * 175))",
        "25/value": "round(VIVERRIDAE_CYCLE * 18)",
        "26/value": "round(VIVERRIDAE_CYCLE * 9)",
        "27/value": "round(VIVERRIDAE_CYCLE * 14)"
      },
      "fastbreeding:patches/compatibility/fotsa/vombatidae.json": {
        "0/value": "round(VOMBATIDAE_CYCLE * 18)",
        "1/value": "round(VOMBATIDAE_CYCLE * 1)",
        "2/value": "round(VOMBATIDAE_CYCLE * 25)",
        "3/value": "round(VOMBATIDAE_CYCLE * 1)",
        "4/value": "round(VOMBATIDAE_CYCLE * 18)",
        "5/value": "round(VOMBATIDAE_CYCLE * 1)",
        "6/value": "round(VOMBATIDAE_CYCLE * 25)",
        "7/value": "round(VOMBATIDAE_CYCLE * 1)",
        "8/value": "round(VOMBATIDAE_CYCLE * 7.5)",
        "9/value": "round(VOMBATIDAE_CYCLE * 0.5)",
        "10/value": "round(VOMBATIDAE_CYCLE * 10)",
        "11/value": "round(VOMBATIDAE_CYCLE * 1)",
        "12/value": "round(VOMBATIDAE_CYCLE * 1)",
        "13/value": "round(VOMBATIDAE_CYCLE * 11)",
        "14/value": "round(VOMBATIDAE_CYCLE * 4)",
        "15/value": "round(VOMBATIDAE_CYCLE * 56)",
        "16/value": "round(VOMBATIDAE_CYCLE * 3)",
        "17/value": "round(VOMBATIDAE_CYCLE * 0.5)",
        "18/value": "round(VOMBATIDAE_CYCLE * 3)",
        "19/value": "round(VOMBATIDAE_CYCLE * 0.5)",
        "20/value": "round(VOMBATIDAE_CYCLE * 3)",
        "21/value": "round(VOMBATIDAE_CYCLE * 0.5)",
        "22/value": "round(VOMBATIDAE_CYCLE * 1)",
        "23/value": "max(1, round(VOMBATIDAE_CYCLE * 350))",
        "24/value": "round(VOMBATIDAE_CYCLE * 14)",
        "25/value": "round(VOMBATIDAE_CYCLE * 1)",
        "26/value": "round(VOMBATIDAE_CYCLE * 1)",
        "27/value": "round(VOMBATIDAE_CYCLE * 2.5)",
        "28/value": "round(VOMBATIDAE_CYCLE * 0.5)",
        "29/value": "round(VOMBATIDAE_CYCLE * 0.05)",
        "30/value": "round(VOMBATIDAE_CYCLE * 0.05)",
        "31/value": "round(VOMBATIDAE_CYCLE * 18)",
        "32/value": "round(VOMBATIDAE_CYCLE * 9)",
        "33/value": "round(VOMBATIDAE_CYCLE * 36)",
        "34/value": "round(VOMBATIDAE_CYCLE * 2.5)",
        "35/value": "round(VOMBATIDAE_CYCLE * 0.5)",
        "36/value": "round(VOMBATIDAE_CYCLE * 1)",
        "37/value": "round(VOMBATIDAE_CYCLE * 1)",
        "38/value": "round(VOMBATIDAE_CYCLE * 0.3)",
        "39/value": "max(1, round(VOMBATIDAE_CYCLE * 525))",
        "40/value": "round(VOMBATIDAE_CYCLE * 4)",
        "41/value": "round(VOMBATIDAE_CYCLE * 1)",
        "42/value": "round(VOMBATIDAE_CYCLE * 3)",
        "43/value": "round(VOMBATIDAE_CYCLE * 1)",
        "44/value": "round(VOMBATIDAE_CYCLE * 11.5)",
        "45/value": "round(VOMBATIDAE_CYCLE * 1.5)",
        "46/value": "round(VOMBATIDAE_CYCLE * 1)",
        "47/value": "round(VOMBATIDAE_CYCLE * 0.3)",
        "48/value": "round(VOMBATIDAE_CYCLE * 3)",
        "49/value": "round(VOMBATIDAE_CYCLE * 1)",
        "50/value": "round(VOMBATIDAE_CYCLE * 11.5)",
        "51/value": "round(VOMBATIDAE_CYCLE * 1.5)",
        "52/value": "round(VOMBATIDAE_CYCLE * 1)",
        "53/value": "round(VOMBATIDAE_CYCLE * 0.3)",
        "54/value": "round(VOMBATIDAE_CYCLE * 1)",
        "55/value": "round(VOMBATIDAE_CYCLE * 0.3)",
        "56/value": "round(VOMBATIDAE_CYCLE * 4.5)",
        "57/value": "round(VOMBATIDAE_CYCLE * 0.5)",
        "58/value": "round(VOMBATIDAE_CYCLE * 1)",
        "59/value": "round(VOMBATIDAE_CYCLE * 0.3)",
        "60/value": "round(VOMBATIDAE_CYCLE * 1)",
        "61/value": "round(VOMBATIDAE_CYCLE * 0.3)",
        "62/value": "round(VOMBATIDAE_CYCLE * 1)",
        "63/value": "round(VOMBATIDAE_CYCLE * 0.05)",
        "64/value": "round(VOMBATIDAE_CYCLE * 0.05)",
        "65/value": "round(VOMBATIDAE_CYCLE * 11)",
        "66/value": "round(VOMBATIDAE_CYCLE * 4)",
        "67/value": "round(VOMBATIDAE_CYCLE * 36)",
        "68/value": "round(VOMBATIDAE_CYCLE * 1.5)",
        "69/value": "round(VOMBATIDAE_CYCLE * 0.5)",
        "70/value": "round(VOMBATIDAE_CYCLE * 0.3)",
        "71/value": "round(VOMBATIDAE_CYCLE * 1.5)",
        "72/value": "round(VOMBATIDAE_CYCLE * 0.5)",
        "73/value": "round(VOMBATIDAE_CYCLE * 0.3)",
        "74/value": "round(VOMBATIDAE_CYCLE * 1)",
        "75/value": "max(1, round(VOMBATIDAE_CYCLE * 525))"
      },
      "fastbreeding:patches/land/chicken.json": {
        "0/value": "round(CHICKEN_CYCLE * 128)",
        "1/value": "round(CHICKEN_CYCLE * 1.25)",
        "2/value": "round(CHICKEN_CYCLE * 0.25)",
        "3/value": "round(CHICKEN_CYCLE * 1.75)",
        "4/value": "round(CHICKEN_CYCLE * 0.25)",
        "5/value": "round(CHICKEN_CYCLE * 12)",
        "6/value": "round(CHICKEN_CYCLE * 4)",
        "7/value": "round(CHICKEN_CYCLE * 72)",
        "8/value": "round(CHICKEN_CYCLE * 3)",
        "9/value": "round(CHICKEN_CYCLE * 0)",
        "10/value": "round(CHICKEN_CYCLE * 1.25)",
        "11/value": "round(CHICKEN_CYCLE * 0.25)",
        "12/value": "round(CHICKEN_CYCLE * 1.75)",
        "13/value": "round(CHICKEN_CYCLE * 0.25)",
        "14/value": "round(CHICKEN_CYCLE * 12)",
        "15/value": "round(CHICKEN_CYCLE * 4)",
        "16/value": "round(CHICKEN_CYCLE * 80)"
      },
      "fastbreeding:patches/land/hare.json": {
        "0/value": "round(HARE_CYCLE * 336)",
        "1/value": "round(HARE_CYCLE * 2)",
        "2/value": "round(HARE_CYCLE * 0.5)",
        "3/value": "round(HARE_CYCLE * 5)",
        "4/value": "round(HARE_CYCLE * 2)",
        "5/value": "round(HARE_CYCLE * 5)",
        "6/value": "round(HARE_CYCLE * 2)",
        "7/value": "round(HARE_CYCLE * 0.5)"
      },
      "fastbreeding:patches/land/hooved/goat.json": {
        "0/value": "round(GOAT_CYCLE * 12)",
        "1/value": "round(GOAT_CYCLE * 3)",
        "2/value": "round(GOAT_CYCLE * 2)",
        "3/value": "round(GOAT_CYCLE * 1)",
        "4/value": "round(GOAT_CYCLE * 16)",
        "5/value": "round(GOAT_CYCLE * 3)",
        "6/value": "round(GOAT_CYCLE * 16)",
        "7/value": "round(GOAT_CYCLE * 3)",
        "8/value": "round(GOAT_CYCLE * 1.7)",
        "9/value": "round(GOAT_CYCLE * 1)",
        "10/value": "round(GOAT_CYCLE * 1)",
        "11/value": "round(GOAT_CYCLE * 0.5)",
        "12/value": "round(GOAT_CYCLE * 1.2)",
        "13/value": "round(GOAT_CYCLE * 0.3)",
        "14/value": "round(GOAT_CYCLE * 1.8)",
        "15/value": "round(GOAT_CYCLE * 0.3)",
        "16/value": "round(GOAT_CYCLE * 1.2)",
        "17/value": "round(GOAT_CYCLE * 0.5)",
        "18/value": "round(GOAT_CYCLE * 1.8)",
        "19/value": "round(GOAT_CYCLE * 0.3)",
        "20/value": "round(GOAT_CYCLE * 2)",
        "21/value": "round(GOAT_CYCLE * 0.3)",
        "22/value": "round(GOAT_CYCLE * 3)",
        "23/value": "round(GOAT_CYCLE * 0.3)",
        "24/value": "round(GOAT_CYCLE * 1.2)",
        "25/value": "round(GOAT_CYCLE * 0.3)",
        "26/value": "round(GOAT_CYCLE * 1.2)",
        "27/value": "round(GOAT_CYCLE * 0.3)",
        "28/value": "round(GOAT_CYCLE * 1.8)",
        "29/value": "round(GOAT_CYCLE * 0.3)",
        "30/value": "round(GOAT_CYCLE * 1.8)",
        "31/value": "round(GOAT_CYCLE * 0.3)",
        "32/value": "round(GOAT_CYCLE * 1.2)",
        "33/value": "round(GOAT_CYCLE * 0.3)",
        "34/value": "round(GOAT_CYCLE * 336)",
        "35/value": "round(GOAT_CYCLE * 11)",
        "36/value": "round(GOAT_CYCLE * 4)",
        "37/value": "round(GOAT_CYCLE * 20)"
      },
      "fastbreeding:patches/land/pig-wild.json": {
        "0/value": "round(PIG_CYCLE * 9)",
        "1/value": "round(PIG_CYCLE * 1.5)",
        "2/value": "round(PIG_CYCLE * 1.5)",
        "3/value": "round(PIG_CYCLE * 2)",
        "4/value": "round(PIG_CYCLE * 11)",
        "5/value": "round(PIG_CYCLE * 6)",
        "6/value": "round(PIG_CYCLE * 25)",
        "7/value": "round(PIG_CYCLE * 9)",
        "8/value": "round(PIG_CYCLE * 1.5)",
        "9/value": "round(PIG_CYCLE * 1.5)",
        "10/value": "round(PIG_CYCLE * 2)",
        "11/value": "round(PIG_CYCLE * 1.5)",
        "12/value": "round(PIG_CYCLE * 1)",
        "13/value": "round(PIG_CYCLE * 168)"
      },
      "fastbreeding:patches/land/sheep-bighorn.json": {
        "0/value": "round(SHEEP_CYCLE * 16)",
        "1/value": "round(SHEEP_CYCLE * 3)",
        "2/value": "round(SHEEP_CYCLE * 1.2)",
        "3/value": "round(SHEEP_CYCLE * 0.2)",
        "4/value": "round(SHEEP_CYCLE * 1)",
        "5/value": "round(SHEEP_CYCLE * 0.3)",
        "6/value": "round(SHEEP_CYCLE * 11)",
        "7/value": "round(SHEEP_CYCLE * 4)",
        "8/value": "round(SHEEP_CYCLE * 20)",
        "9/value": "round(SHEEP_CYCLE * 1.5)",
        "10/value": "round(SHEEP_CYCLE * 0.5)",
        "11/value": "round(SHEEP_CYCLE * 1)",
        "12/value": "round(SHEEP_CYCLE * 0.5)",
        "13/value": "round(SHEEP_CYCLE * 336)",
        "14/value": "round(SHEEP_CYCLE * 13)",
        "15/value": "round(SHEEP_CYCLE * 3)",
        "16/value": "round(SHEEP_CYCLE * 1.2)",
        "17/value": "round(SHEEP_CYCLE * 0.2)",
        "18/value": "round(SHEEP_CYCLE * 1)",
        "19/value": "round(SHEEP_CYCLE * 0.3)"
      }
    }
  },
  "settings": {
    "boolean": {
      "REDUCE_DROPS": {
        "comment": "reduce-drops-comment",
        "default": true,
        "ingui": "fastbreeding:reduce-drops",
        "name": "reduce-drops",
        "weight": 0
      }
    },
    "float": {
      "BOVINAE_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:bovinae-cycle",
        "logarithmic": true,
        "name": "bovinae-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 8
      },
      "CANINAE_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:caninae-cycle",
        "logarithmic": true,
        "name": "caninae-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 9
      },
      "CAPREOLINAE_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:capreolinae-cycle",
        "logarithmic": true,
        "name": "capreolinae-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 10
      },
      "CERVINAE_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:cervinae-cycle",
        "logarithmic": true,
        "name": "cervinae-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 11
      },
      "CHICKEN_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:chicken-cycle",
        "logarithmic": true,
        "name": "chicken-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 2
      },
      "ELEPHANTIDAE_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:elephantidae-cycle",
        "logarithmic": true,
        "name": "elephantidae-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 12
      },
      "FELINAE_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:felinae-cycle",
        "logarithmic": true,
        "name": "felinae-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 13
      },
      "GOAT_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:goat-cycle",
        "logarithmic": true,
        "name": "goat-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 3
      },
      "HARE_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:hare-cycle",
        "logarithmic": true,
        "name": "hare-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 4
      },
      "INIIDAE_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:iniidae-cycle",
        "logarithmic": true,
        "name": "iniidae-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 14
      },
      "MACHAIRODONTINAE_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:machairodontinae-cycle",
        "logarithmic": true,
        "name": "machairodontinae-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 15
      },
      "MANIDAE_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:manidae-cycle",
        "logarithmic": true,
        "name": "manidae-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 16
      },
      "MEIOLANIIDAE_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:meiolaniidae-cycle",
        "logarithmic": true,
        "name": "meiolaniidae-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 17
      },
      "PANTHERINAE_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:pantherinae-cycle",
        "logarithmic": true,
        "name": "pantherinae-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 18
      },
      "PIG_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:pig-cycle",
        "logarithmic": true,
        "name": "pig-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 5
      },
      "RHINOCEROTIDAE_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:rhinocerotidae-cycle",
        "logarithmic": true,
        "name": "rhinocerotidae-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 19
      },
      "SHEEP_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:sheep-cycle",
        "logarithmic": true,
        "name": "sheep-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 6
      },
      "SIRENIA_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:sirenia-cycle",
        "logarithmic": true,
        "name": "sirenia-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 20
      },
      "SPHENISCIDAE_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:spheniscidae-cycle",
        "logarithmic": true,
        "name": "spheniscidae-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 21
      },
      "THYLACINIDAE_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:thylacinidae-cycle",
        "logarithmic": true,
        "name": "thylacinidae-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 22
      },
      "VIVERRIDAE_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:viverridae-cycle",
        "logarithmic": true,
        "name": "viverridae-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 23
      },
      "VOMBATIDAE_CYCLE": {
        "comment": "cycle-comment",
        "default": 0.5,
        "ingui": "fastbreeding:vombatidae-cycle",
        "logarithmic": true,
        "name": "vombatidae-cycle",
        "range": {
          "max": 10,
          "min": 0
        },
        "weight": 24
      }
    }
  },
  "version": 1
}
